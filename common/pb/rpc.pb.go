// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/ownluke/xuperos/common/pb/rpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	pb "github.com/xuperchain/xupercore/bcs/ledger/xledger/pb"
	protos "github.com/xuperchain/xupercore/protos"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type XChainErrorEnum int32

const (
	XChainErrorEnum_SUCCESS                        XChainErrorEnum = 0
	XChainErrorEnum_UNKNOW_ERROR                   XChainErrorEnum = 1
	XChainErrorEnum_CONNECT_REFUSE                 XChainErrorEnum = 2
	XChainErrorEnum_NOT_ENOUGH_UTXO_ERROR          XChainErrorEnum = 3
	XChainErrorEnum_UTXOVM_ALREADY_UNCONFIRM_ERROR XChainErrorEnum = 4
	XChainErrorEnum_UTXOVM_NOT_FOUND_ERROR         XChainErrorEnum = 5
	XChainErrorEnum_INPUT_OUTPUT_NOT_EQUAL_ERROR   XChainErrorEnum = 6
	XChainErrorEnum_TX_NOT_FOUND_ERROR             XChainErrorEnum = 7
	XChainErrorEnum_TX_SIGN_ERROR                  XChainErrorEnum = 8
	XChainErrorEnum_BLOCKCHAIN_NOTEXIST            XChainErrorEnum = 9
	XChainErrorEnum_VALIDATE_ERROR                 XChainErrorEnum = 10
	XChainErrorEnum_CANNOT_SYNC_BLOCK_ERROR        XChainErrorEnum = 11
	XChainErrorEnum_CONFIRM_BLOCK_ERROR            XChainErrorEnum = 12
	XChainErrorEnum_UTXOVM_PLAY_ERROR              XChainErrorEnum = 13
	XChainErrorEnum_WALK_ERROR                     XChainErrorEnum = 14
	XChainErrorEnum_NOT_READY_ERROR                XChainErrorEnum = 15
	XChainErrorEnum_BLOCK_EXIST_ERROR              XChainErrorEnum = 16
	XChainErrorEnum_ROOT_BLOCK_EXIST_ERROR         XChainErrorEnum = 17
	XChainErrorEnum_TX_DUPLICATE_ERROR             XChainErrorEnum = 19
	XChainErrorEnum_SERVICE_REFUSED_ERROR          XChainErrorEnum = 20
	XChainErrorEnum_TXDATA_SIGN_ERROR              XChainErrorEnum = 21
	XChainErrorEnum_TX_SLE_ERROR                   XChainErrorEnum = 25
	XChainErrorEnum_TX_FEE_NOT_ENOUGH_ERROR        XChainErrorEnum = 26
	XChainErrorEnum_UTXO_SIGN_ERROR                XChainErrorEnum = 28
	XChainErrorEnum_DPOS_QUERY_ERROR               XChainErrorEnum = 31
	XChainErrorEnum_RWSET_INVALID_ERROR            XChainErrorEnum = 33
	XChainErrorEnum_RWACL_INVALID_ERROR            XChainErrorEnum = 34
	XChainErrorEnum_GAS_NOT_ENOUGH_ERROR           XChainErrorEnum = 35
	XChainErrorEnum_TX_VERSION_INVALID_ERROR       XChainErrorEnum = 36
	XChainErrorEnum_COMPLIANCE_CHECK_NOT_APPROVED  XChainErrorEnum = 37
	XChainErrorEnum_ACCOUNT_CONTRACT_STATUS_ERROR  XChainErrorEnum = 38
	XChainErrorEnum_TX_VERIFICATION_ERROR          XChainErrorEnum = 40
)

var XChainErrorEnum_name = map[int32]string{
	0:  "SUCCESS",
	1:  "UNKNOW_ERROR",
	2:  "CONNECT_REFUSE",
	3:  "NOT_ENOUGH_UTXO_ERROR",
	4:  "UTXOVM_ALREADY_UNCONFIRM_ERROR",
	5:  "UTXOVM_NOT_FOUND_ERROR",
	6:  "INPUT_OUTPUT_NOT_EQUAL_ERROR",
	7:  "TX_NOT_FOUND_ERROR",
	8:  "TX_SIGN_ERROR",
	9:  "BLOCKCHAIN_NOTEXIST",
	10: "VALIDATE_ERROR",
	11: "CANNOT_SYNC_BLOCK_ERROR",
	12: "CONFIRM_BLOCK_ERROR",
	13: "UTXOVM_PLAY_ERROR",
	14: "WALK_ERROR",
	15: "NOT_READY_ERROR",
	16: "BLOCK_EXIST_ERROR",
	17: "ROOT_BLOCK_EXIST_ERROR",
	19: "TX_DUPLICATE_ERROR",
	20: "SERVICE_REFUSED_ERROR",
	21: "TXDATA_SIGN_ERROR",
	25: "TX_SLE_ERROR",
	26: "TX_FEE_NOT_ENOUGH_ERROR",
	28: "UTXO_SIGN_ERROR",
	31: "DPOS_QUERY_ERROR",
	33: "RWSET_INVALID_ERROR",
	34: "RWACL_INVALID_ERROR",
	35: "GAS_NOT_ENOUGH_ERROR",
	36: "TX_VERSION_INVALID_ERROR",
	37: "COMPLIANCE_CHECK_NOT_APPROVED",
	38: "ACCOUNT_CONTRACT_STATUS_ERROR",
	40: "TX_VERIFICATION_ERROR",
}

var XChainErrorEnum_value = map[string]int32{
	"SUCCESS":                        0,
	"UNKNOW_ERROR":                   1,
	"CONNECT_REFUSE":                 2,
	"NOT_ENOUGH_UTXO_ERROR":          3,
	"UTXOVM_ALREADY_UNCONFIRM_ERROR": 4,
	"UTXOVM_NOT_FOUND_ERROR":         5,
	"INPUT_OUTPUT_NOT_EQUAL_ERROR":   6,
	"TX_NOT_FOUND_ERROR":             7,
	"TX_SIGN_ERROR":                  8,
	"BLOCKCHAIN_NOTEXIST":            9,
	"VALIDATE_ERROR":                 10,
	"CANNOT_SYNC_BLOCK_ERROR":        11,
	"CONFIRM_BLOCK_ERROR":            12,
	"UTXOVM_PLAY_ERROR":              13,
	"WALK_ERROR":                     14,
	"NOT_READY_ERROR":                15,
	"BLOCK_EXIST_ERROR":              16,
	"ROOT_BLOCK_EXIST_ERROR":         17,
	"TX_DUPLICATE_ERROR":             19,
	"SERVICE_REFUSED_ERROR":          20,
	"TXDATA_SIGN_ERROR":              21,
	"TX_SLE_ERROR":                   25,
	"TX_FEE_NOT_ENOUGH_ERROR":        26,
	"UTXO_SIGN_ERROR":                28,
	"DPOS_QUERY_ERROR":               31,
	"RWSET_INVALID_ERROR":            33,
	"RWACL_INVALID_ERROR":            34,
	"GAS_NOT_ENOUGH_ERROR":           35,
	"TX_VERSION_INVALID_ERROR":       36,
	"COMPLIANCE_CHECK_NOT_APPROVED":  37,
	"ACCOUNT_CONTRACT_STATUS_ERROR":  38,
	"TX_VERIFICATION_ERROR":          40,
}

func (x XChainErrorEnum) String() string {
	return proto.EnumName(XChainErrorEnum_name, int32(x))
}

func (XChainErrorEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{0}
}

// View option to be choosed (only used in status filter currently)
type ViewOption int32

const (
	// Without any flag: Default
	ViewOption_NONE ViewOption = 0
	// Ledger flag: Get Ledger Info
	ViewOption_LEDGER ViewOption = 1
	// Utxo flag: Get UTXO Info
	ViewOption_UTXOINFO ViewOption = 2
	// Branch flag: Get BranchId Info
	ViewOption_BRANCHINFO ViewOption = 3
	// Peers flag: Get Peers Info
	ViewOption_PEERS ViewOption = 4
)

var ViewOption_name = map[int32]string{
	0: "NONE",
	1: "LEDGER",
	2: "UTXOINFO",
	3: "BRANCHINFO",
	4: "PEERS",
}

var ViewOption_value = map[string]int32{
	"NONE":       0,
	"LEDGER":     1,
	"UTXOINFO":   2,
	"BRANCHINFO": 3,
	"PEERS":      4,
}

func (x ViewOption) String() string {
	return proto.EnumName(ViewOption_name, int32(x))
}

func (ViewOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{1}
}

type Block_EBlockStatus int32

const (
	Block_ERROR   Block_EBlockStatus = 0
	Block_TRUNK   Block_EBlockStatus = 1
	Block_BRANCH  Block_EBlockStatus = 2
	Block_NOEXIST Block_EBlockStatus = 3
)

var Block_EBlockStatus_name = map[int32]string{
	0: "ERROR",
	1: "TRUNK",
	2: "BRANCH",
	3: "NOEXIST",
}

var Block_EBlockStatus_value = map[string]int32{
	"ERROR":   0,
	"TRUNK":   1,
	"BRANCH":  2,
	"NOEXIST": 3,
}

func (x Block_EBlockStatus) String() string {
	return proto.EnumName(Block_EBlockStatus_name, int32(x))
}

func (Block_EBlockStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{22, 0}
}

type Header struct {
	Logid                string          `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	FromNode             string          `protobuf:"bytes,2,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	Error                XChainErrorEnum `protobuf:"varint,3,opt,name=error,proto3,enum=pb.XChainErrorEnum" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{0}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetLogid() string {
	if m != nil {
		return m.Logid
	}
	return ""
}

func (m *Header) GetFromNode() string {
	if m != nil {
		return m.FromNode
	}
	return ""
}

func (m *Header) GetError() XChainErrorEnum {
	if m != nil {
		return m.Error
	}
	return XChainErrorEnum_SUCCESS
}

type TxStatus struct {
	Header               *Header              `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string               `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Txid                 []byte               `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	Status               pb.TransactionStatus `protobuf:"varint,4,opt,name=status,proto3,enum=pb.TransactionStatus" json:"status,omitempty"`
	Distance             int64                `protobuf:"varint,5,opt,name=distance,proto3" json:"distance,omitempty"`
	Tx                   *pb.Transaction      `protobuf:"bytes,7,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TxStatus) Reset()         { *m = TxStatus{} }
func (m *TxStatus) String() string { return proto.CompactTextString(m) }
func (*TxStatus) ProtoMessage()    {}
func (*TxStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{1}
}

func (m *TxStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxStatus.Unmarshal(m, b)
}
func (m *TxStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxStatus.Marshal(b, m, deterministic)
}
func (m *TxStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxStatus.Merge(m, src)
}
func (m *TxStatus) XXX_Size() int {
	return xxx_messageInfo_TxStatus.Size(m)
}
func (m *TxStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TxStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TxStatus proto.InternalMessageInfo

func (m *TxStatus) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TxStatus) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *TxStatus) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *TxStatus) GetStatus() pb.TransactionStatus {
	if m != nil {
		return m.Status
	}
	return pb.TransactionStatus_TX_UNDEFINE
}

func (m *TxStatus) GetDistance() int64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *TxStatus) GetTx() *pb.Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type CommonReply struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonReply) Reset()         { *m = CommonReply{} }
func (m *CommonReply) String() string { return proto.CompactTextString(m) }
func (*CommonReply) ProtoMessage()    {}
func (*CommonReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{2}
}

func (m *CommonReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonReply.Unmarshal(m, b)
}
func (m *CommonReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonReply.Marshal(b, m, deterministic)
}
func (m *CommonReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonReply.Merge(m, src)
}
func (m *CommonReply) XXX_Size() int {
	return xxx_messageInfo_CommonReply.Size(m)
}
func (m *CommonReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonReply.DiscardUnknown(m)
}

var xxx_messageInfo_CommonReply proto.InternalMessageInfo

func (m *CommonReply) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type InvokeRPCRequest struct {
	Header               *Header                 `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string                  `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Requests             []*protos.InvokeRequest `protobuf:"bytes,3,rep,name=requests,proto3" json:"requests,omitempty"`
	Initiator            string                  `protobuf:"bytes,4,opt,name=initiator,proto3" json:"initiator,omitempty"`
	AuthRequire          []string                `protobuf:"bytes,5,rep,name=auth_require,json=authRequire,proto3" json:"auth_require,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *InvokeRPCRequest) Reset()         { *m = InvokeRPCRequest{} }
func (m *InvokeRPCRequest) String() string { return proto.CompactTextString(m) }
func (*InvokeRPCRequest) ProtoMessage()    {}
func (*InvokeRPCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{3}
}

func (m *InvokeRPCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeRPCRequest.Unmarshal(m, b)
}
func (m *InvokeRPCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeRPCRequest.Marshal(b, m, deterministic)
}
func (m *InvokeRPCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeRPCRequest.Merge(m, src)
}
func (m *InvokeRPCRequest) XXX_Size() int {
	return xxx_messageInfo_InvokeRPCRequest.Size(m)
}
func (m *InvokeRPCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeRPCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeRPCRequest proto.InternalMessageInfo

func (m *InvokeRPCRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *InvokeRPCRequest) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *InvokeRPCRequest) GetRequests() []*protos.InvokeRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *InvokeRPCRequest) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

func (m *InvokeRPCRequest) GetAuthRequire() []string {
	if m != nil {
		return m.AuthRequire
	}
	return nil
}

type InvokeRPCResponse struct {
	Header               *Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string                 `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Response             *protos.InvokeResponse `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InvokeRPCResponse) Reset()         { *m = InvokeRPCResponse{} }
func (m *InvokeRPCResponse) String() string { return proto.CompactTextString(m) }
func (*InvokeRPCResponse) ProtoMessage()    {}
func (*InvokeRPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{4}
}

func (m *InvokeRPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeRPCResponse.Unmarshal(m, b)
}
func (m *InvokeRPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeRPCResponse.Marshal(b, m, deterministic)
}
func (m *InvokeRPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeRPCResponse.Merge(m, src)
}
func (m *InvokeRPCResponse) XXX_Size() int {
	return xxx_messageInfo_InvokeRPCResponse.Size(m)
}
func (m *InvokeRPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeRPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeRPCResponse proto.InternalMessageInfo

func (m *InvokeRPCResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *InvokeRPCResponse) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *InvokeRPCResponse) GetResponse() *protos.InvokeResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// PreExecWithSelectUTXORequest preExec + selectUtxo for request
type PreExecWithSelectUTXORequest struct {
	Header               *Header           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string            `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Address              string            `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	TotalAmount          int64             `protobuf:"varint,4,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	SignInfo             *pb.SignatureInfo `protobuf:"bytes,6,opt,name=signInfo,proto3" json:"signInfo,omitempty"`
	NeedLock             bool              `protobuf:"varint,7,opt,name=needLock,proto3" json:"needLock,omitempty"`
	Request              *InvokeRPCRequest `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PreExecWithSelectUTXORequest) Reset()         { *m = PreExecWithSelectUTXORequest{} }
func (m *PreExecWithSelectUTXORequest) String() string { return proto.CompactTextString(m) }
func (*PreExecWithSelectUTXORequest) ProtoMessage()    {}
func (*PreExecWithSelectUTXORequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{5}
}

func (m *PreExecWithSelectUTXORequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreExecWithSelectUTXORequest.Unmarshal(m, b)
}
func (m *PreExecWithSelectUTXORequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreExecWithSelectUTXORequest.Marshal(b, m, deterministic)
}
func (m *PreExecWithSelectUTXORequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreExecWithSelectUTXORequest.Merge(m, src)
}
func (m *PreExecWithSelectUTXORequest) XXX_Size() int {
	return xxx_messageInfo_PreExecWithSelectUTXORequest.Size(m)
}
func (m *PreExecWithSelectUTXORequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PreExecWithSelectUTXORequest.DiscardUnknown(m)
}

var xxx_messageInfo_PreExecWithSelectUTXORequest proto.InternalMessageInfo

func (m *PreExecWithSelectUTXORequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PreExecWithSelectUTXORequest) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *PreExecWithSelectUTXORequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PreExecWithSelectUTXORequest) GetTotalAmount() int64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *PreExecWithSelectUTXORequest) GetSignInfo() *pb.SignatureInfo {
	if m != nil {
		return m.SignInfo
	}
	return nil
}

func (m *PreExecWithSelectUTXORequest) GetNeedLock() bool {
	if m != nil {
		return m.NeedLock
	}
	return false
}

func (m *PreExecWithSelectUTXORequest) GetRequest() *InvokeRPCRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

// PreExecWithSelectUTXOResponse preExec + selectUtxo for response
type PreExecWithSelectUTXOResponse struct {
	Header   *Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname   string                 `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Response *protos.InvokeResponse `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	// for preExec & selectUTXO
	UtxoOutput           *pb.UtxoOutput `protobuf:"bytes,4,opt,name=utxoOutput,proto3" json:"utxoOutput,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PreExecWithSelectUTXOResponse) Reset()         { *m = PreExecWithSelectUTXOResponse{} }
func (m *PreExecWithSelectUTXOResponse) String() string { return proto.CompactTextString(m) }
func (*PreExecWithSelectUTXOResponse) ProtoMessage()    {}
func (*PreExecWithSelectUTXOResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{6}
}

func (m *PreExecWithSelectUTXOResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreExecWithSelectUTXOResponse.Unmarshal(m, b)
}
func (m *PreExecWithSelectUTXOResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreExecWithSelectUTXOResponse.Marshal(b, m, deterministic)
}
func (m *PreExecWithSelectUTXOResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreExecWithSelectUTXOResponse.Merge(m, src)
}
func (m *PreExecWithSelectUTXOResponse) XXX_Size() int {
	return xxx_messageInfo_PreExecWithSelectUTXOResponse.Size(m)
}
func (m *PreExecWithSelectUTXOResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PreExecWithSelectUTXOResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PreExecWithSelectUTXOResponse proto.InternalMessageInfo

func (m *PreExecWithSelectUTXOResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PreExecWithSelectUTXOResponse) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *PreExecWithSelectUTXOResponse) GetResponse() *protos.InvokeResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *PreExecWithSelectUTXOResponse) GetUtxoOutput() *pb.UtxoOutput {
	if m != nil {
		return m.UtxoOutput
	}
	return nil
}

// UtxoRequest query info to query utxos
type UtxoRequest struct {
	Header *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// which bcname to select
	Bcname string `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	// address to select
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// publickey of the address
	Publickey string `protobuf:"bytes,4,opt,name=publickey,proto3" json:"publickey,omitempty"`
	// totalNeed refer the total need utxos to select
	TotalNeed string `protobuf:"bytes,5,opt,name=totalNeed,proto3" json:"totalNeed,omitempty"`
	// userSign of input
	UserSign []byte `protobuf:"bytes,7,opt,name=userSign,proto3" json:"userSign,omitempty"`
	// need lock
	NeedLock             bool     `protobuf:"varint,8,opt,name=needLock,proto3" json:"needLock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UtxoRequest) Reset()         { *m = UtxoRequest{} }
func (m *UtxoRequest) String() string { return proto.CompactTextString(m) }
func (*UtxoRequest) ProtoMessage()    {}
func (*UtxoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{7}
}

func (m *UtxoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UtxoRequest.Unmarshal(m, b)
}
func (m *UtxoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UtxoRequest.Marshal(b, m, deterministic)
}
func (m *UtxoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UtxoRequest.Merge(m, src)
}
func (m *UtxoRequest) XXX_Size() int {
	return xxx_messageInfo_UtxoRequest.Size(m)
}
func (m *UtxoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UtxoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UtxoRequest proto.InternalMessageInfo

func (m *UtxoRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UtxoRequest) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *UtxoRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UtxoRequest) GetPublickey() string {
	if m != nil {
		return m.Publickey
	}
	return ""
}

func (m *UtxoRequest) GetTotalNeed() string {
	if m != nil {
		return m.TotalNeed
	}
	return ""
}

func (m *UtxoRequest) GetUserSign() []byte {
	if m != nil {
		return m.UserSign
	}
	return nil
}

func (m *UtxoRequest) GetNeedLock() bool {
	if m != nil {
		return m.NeedLock
	}
	return false
}

// UtxoResponse query results
type UtxoResponse struct {
	Header *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// outSign return the output
	// bytes outSign = 2;
	// utxo list
	UtxoList []*pb.Utxo `protobuf:"bytes,2,rep,name=utxoList,proto3" json:"utxoList,omitempty"`
	// total selected amount
	TotalSelected        string   `protobuf:"bytes,3,opt,name=totalSelected,proto3" json:"totalSelected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UtxoResponse) Reset()         { *m = UtxoResponse{} }
func (m *UtxoResponse) String() string { return proto.CompactTextString(m) }
func (*UtxoResponse) ProtoMessage()    {}
func (*UtxoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{8}
}

func (m *UtxoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UtxoResponse.Unmarshal(m, b)
}
func (m *UtxoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UtxoResponse.Marshal(b, m, deterministic)
}
func (m *UtxoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UtxoResponse.Merge(m, src)
}
func (m *UtxoResponse) XXX_Size() int {
	return xxx_messageInfo_UtxoResponse.Size(m)
}
func (m *UtxoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UtxoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UtxoResponse proto.InternalMessageInfo

func (m *UtxoResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UtxoResponse) GetUtxoList() []*pb.Utxo {
	if m != nil {
		return m.UtxoList
	}
	return nil
}

func (m *UtxoResponse) GetTotalSelected() string {
	if m != nil {
		return m.TotalSelected
	}
	return ""
}

type ContractStatDataRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string   `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContractStatDataRequest) Reset()         { *m = ContractStatDataRequest{} }
func (m *ContractStatDataRequest) String() string { return proto.CompactTextString(m) }
func (*ContractStatDataRequest) ProtoMessage()    {}
func (*ContractStatDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{9}
}

func (m *ContractStatDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractStatDataRequest.Unmarshal(m, b)
}
func (m *ContractStatDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractStatDataRequest.Marshal(b, m, deterministic)
}
func (m *ContractStatDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractStatDataRequest.Merge(m, src)
}
func (m *ContractStatDataRequest) XXX_Size() int {
	return xxx_messageInfo_ContractStatDataRequest.Size(m)
}
func (m *ContractStatDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractStatDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContractStatDataRequest proto.InternalMessageInfo

func (m *ContractStatDataRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ContractStatDataRequest) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

type ContractStatDataResponse struct {
	Header               *Header                  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string                   `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Data                 *protos.ContractStatData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ContractStatDataResponse) Reset()         { *m = ContractStatDataResponse{} }
func (m *ContractStatDataResponse) String() string { return proto.CompactTextString(m) }
func (*ContractStatDataResponse) ProtoMessage()    {}
func (*ContractStatDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{10}
}

func (m *ContractStatDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractStatDataResponse.Unmarshal(m, b)
}
func (m *ContractStatDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractStatDataResponse.Marshal(b, m, deterministic)
}
func (m *ContractStatDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractStatDataResponse.Merge(m, src)
}
func (m *ContractStatDataResponse) XXX_Size() int {
	return xxx_messageInfo_ContractStatDataResponse.Size(m)
}
func (m *ContractStatDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractStatDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContractStatDataResponse proto.InternalMessageInfo

func (m *ContractStatDataResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ContractStatDataResponse) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *ContractStatDataResponse) GetData() *protos.ContractStatData {
	if m != nil {
		return m.Data
	}
	return nil
}

type UtxoRecordDetails struct {
	Header               *Header        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string         `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	AccountName          string         `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	OpenUtxoRecord       *pb.UtxoRecord `protobuf:"bytes,4,opt,name=openUtxoRecord,proto3" json:"openUtxoRecord,omitempty"`
	LockedUtxoRecord     *pb.UtxoRecord `protobuf:"bytes,5,opt,name=lockedUtxoRecord,proto3" json:"lockedUtxoRecord,omitempty"`
	FrozenUtxoRecord     *pb.UtxoRecord `protobuf:"bytes,6,opt,name=frozenUtxoRecord,proto3" json:"frozenUtxoRecord,omitempty"`
	DisplayCount         int64          `protobuf:"varint,7,opt,name=displayCount,proto3" json:"displayCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UtxoRecordDetails) Reset()         { *m = UtxoRecordDetails{} }
func (m *UtxoRecordDetails) String() string { return proto.CompactTextString(m) }
func (*UtxoRecordDetails) ProtoMessage()    {}
func (*UtxoRecordDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{11}
}

func (m *UtxoRecordDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UtxoRecordDetails.Unmarshal(m, b)
}
func (m *UtxoRecordDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UtxoRecordDetails.Marshal(b, m, deterministic)
}
func (m *UtxoRecordDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UtxoRecordDetails.Merge(m, src)
}
func (m *UtxoRecordDetails) XXX_Size() int {
	return xxx_messageInfo_UtxoRecordDetails.Size(m)
}
func (m *UtxoRecordDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_UtxoRecordDetails.DiscardUnknown(m)
}

var xxx_messageInfo_UtxoRecordDetails proto.InternalMessageInfo

func (m *UtxoRecordDetails) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UtxoRecordDetails) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *UtxoRecordDetails) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *UtxoRecordDetails) GetOpenUtxoRecord() *pb.UtxoRecord {
	if m != nil {
		return m.OpenUtxoRecord
	}
	return nil
}

func (m *UtxoRecordDetails) GetLockedUtxoRecord() *pb.UtxoRecord {
	if m != nil {
		return m.LockedUtxoRecord
	}
	return nil
}

func (m *UtxoRecordDetails) GetFrozenUtxoRecord() *pb.UtxoRecord {
	if m != nil {
		return m.FrozenUtxoRecord
	}
	return nil
}

func (m *UtxoRecordDetails) GetDisplayCount() int64 {
	if m != nil {
		return m.DisplayCount
	}
	return 0
}

// 查询Acl
type AclStatus struct {
	Header               *Header     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string      `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	AccountName          string      `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ContractName         string      `protobuf:"bytes,4,opt,name=contractName,proto3" json:"contractName,omitempty"`
	MethodName           string      `protobuf:"bytes,5,opt,name=methodName,proto3" json:"methodName,omitempty"`
	Confirmed            bool        `protobuf:"varint,6,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Acl                  *protos.Acl `protobuf:"bytes,7,opt,name=acl,proto3" json:"acl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AclStatus) Reset()         { *m = AclStatus{} }
func (m *AclStatus) String() string { return proto.CompactTextString(m) }
func (*AclStatus) ProtoMessage()    {}
func (*AclStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{12}
}

func (m *AclStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AclStatus.Unmarshal(m, b)
}
func (m *AclStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AclStatus.Marshal(b, m, deterministic)
}
func (m *AclStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AclStatus.Merge(m, src)
}
func (m *AclStatus) XXX_Size() int {
	return xxx_messageInfo_AclStatus.Size(m)
}
func (m *AclStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AclStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AclStatus proto.InternalMessageInfo

func (m *AclStatus) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AclStatus) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *AclStatus) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *AclStatus) GetContractName() string {
	if m != nil {
		return m.ContractName
	}
	return ""
}

func (m *AclStatus) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *AclStatus) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *AclStatus) GetAcl() *protos.Acl {
	if m != nil {
		return m.Acl
	}
	return nil
}

// Query account contracts request
type GetAccountContractsRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string   `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Account              string   `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountContractsRequest) Reset()         { *m = GetAccountContractsRequest{} }
func (m *GetAccountContractsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountContractsRequest) ProtoMessage()    {}
func (*GetAccountContractsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{13}
}

func (m *GetAccountContractsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountContractsRequest.Unmarshal(m, b)
}
func (m *GetAccountContractsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountContractsRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountContractsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountContractsRequest.Merge(m, src)
}
func (m *GetAccountContractsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountContractsRequest.Size(m)
}
func (m *GetAccountContractsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountContractsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountContractsRequest proto.InternalMessageInfo

func (m *GetAccountContractsRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetAccountContractsRequest) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *GetAccountContractsRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

// Query account contracts response
type GetAccountContractsResponse struct {
	Header               *Header                  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ContractsStatus      []*protos.ContractStatus `protobuf:"bytes,2,rep,name=contracts_status,json=contractsStatus,proto3" json:"contracts_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetAccountContractsResponse) Reset()         { *m = GetAccountContractsResponse{} }
func (m *GetAccountContractsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountContractsResponse) ProtoMessage()    {}
func (*GetAccountContractsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{14}
}

func (m *GetAccountContractsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountContractsResponse.Unmarshal(m, b)
}
func (m *GetAccountContractsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountContractsResponse.Marshal(b, m, deterministic)
}
func (m *GetAccountContractsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountContractsResponse.Merge(m, src)
}
func (m *GetAccountContractsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountContractsResponse.Size(m)
}
func (m *GetAccountContractsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountContractsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountContractsResponse proto.InternalMessageInfo

func (m *GetAccountContractsResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetAccountContractsResponse) GetContractsStatus() []*protos.ContractStatus {
	if m != nil {
		return m.ContractsStatus
	}
	return nil
}

type AddressStatus struct {
	Header               *Header        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address              string         `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Bcs                  []*TokenDetail `protobuf:"bytes,3,rep,name=bcs,proto3" json:"bcs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AddressStatus) Reset()         { *m = AddressStatus{} }
func (m *AddressStatus) String() string { return proto.CompactTextString(m) }
func (*AddressStatus) ProtoMessage()    {}
func (*AddressStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{15}
}

func (m *AddressStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressStatus.Unmarshal(m, b)
}
func (m *AddressStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressStatus.Marshal(b, m, deterministic)
}
func (m *AddressStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressStatus.Merge(m, src)
}
func (m *AddressStatus) XXX_Size() int {
	return xxx_messageInfo_AddressStatus.Size(m)
}
func (m *AddressStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AddressStatus proto.InternalMessageInfo

func (m *AddressStatus) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AddressStatus) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressStatus) GetBcs() []*TokenDetail {
	if m != nil {
		return m.Bcs
	}
	return nil
}

type TokenDetail struct {
	Bcname               string          `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Balance              string          `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Error                XChainErrorEnum `protobuf:"varint,3,opt,name=error,proto3,enum=pb.XChainErrorEnum" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TokenDetail) Reset()         { *m = TokenDetail{} }
func (m *TokenDetail) String() string { return proto.CompactTextString(m) }
func (*TokenDetail) ProtoMessage()    {}
func (*TokenDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{16}
}

func (m *TokenDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenDetail.Unmarshal(m, b)
}
func (m *TokenDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenDetail.Marshal(b, m, deterministic)
}
func (m *TokenDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenDetail.Merge(m, src)
}
func (m *TokenDetail) XXX_Size() int {
	return xxx_messageInfo_TokenDetail.Size(m)
}
func (m *TokenDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TokenDetail proto.InternalMessageInfo

func (m *TokenDetail) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *TokenDetail) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *TokenDetail) GetError() XChainErrorEnum {
	if m != nil {
		return m.Error
	}
	return XChainErrorEnum_SUCCESS
}

type AddressBalanceStatus struct {
	Header               *Header               `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Address              string                `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Tfds                 []*TokenFrozenDetails `protobuf:"bytes,3,rep,name=tfds,proto3" json:"tfds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AddressBalanceStatus) Reset()         { *m = AddressBalanceStatus{} }
func (m *AddressBalanceStatus) String() string { return proto.CompactTextString(m) }
func (*AddressBalanceStatus) ProtoMessage()    {}
func (*AddressBalanceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{17}
}

func (m *AddressBalanceStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressBalanceStatus.Unmarshal(m, b)
}
func (m *AddressBalanceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressBalanceStatus.Marshal(b, m, deterministic)
}
func (m *AddressBalanceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressBalanceStatus.Merge(m, src)
}
func (m *AddressBalanceStatus) XXX_Size() int {
	return xxx_messageInfo_AddressBalanceStatus.Size(m)
}
func (m *AddressBalanceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressBalanceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AddressBalanceStatus proto.InternalMessageInfo

func (m *AddressBalanceStatus) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AddressBalanceStatus) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressBalanceStatus) GetTfds() []*TokenFrozenDetails {
	if m != nil {
		return m.Tfds
	}
	return nil
}

type TokenFrozenDetails struct {
	Bcname               string                  `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Tfd                  []*pb.BalanceDetailInfo `protobuf:"bytes,2,rep,name=tfd,proto3" json:"tfd,omitempty"`
	Error                XChainErrorEnum         `protobuf:"varint,3,opt,name=error,proto3,enum=pb.XChainErrorEnum" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TokenFrozenDetails) Reset()         { *m = TokenFrozenDetails{} }
func (m *TokenFrozenDetails) String() string { return proto.CompactTextString(m) }
func (*TokenFrozenDetails) ProtoMessage()    {}
func (*TokenFrozenDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{18}
}

func (m *TokenFrozenDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenFrozenDetails.Unmarshal(m, b)
}
func (m *TokenFrozenDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenFrozenDetails.Marshal(b, m, deterministic)
}
func (m *TokenFrozenDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenFrozenDetails.Merge(m, src)
}
func (m *TokenFrozenDetails) XXX_Size() int {
	return xxx_messageInfo_TokenFrozenDetails.Size(m)
}
func (m *TokenFrozenDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenFrozenDetails.DiscardUnknown(m)
}

var xxx_messageInfo_TokenFrozenDetails proto.InternalMessageInfo

func (m *TokenFrozenDetails) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *TokenFrozenDetails) GetTfd() []*pb.BalanceDetailInfo {
	if m != nil {
		return m.Tfd
	}
	return nil
}

func (m *TokenFrozenDetails) GetError() XChainErrorEnum {
	if m != nil {
		return m.Error
	}
	return XChainErrorEnum_SUCCESS
}

type TokenFrozenDetail struct {
	Balance              string   `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	IsFrozen             bool     `protobuf:"varint,2,opt,name=isFrozen,proto3" json:"isFrozen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenFrozenDetail) Reset()         { *m = TokenFrozenDetail{} }
func (m *TokenFrozenDetail) String() string { return proto.CompactTextString(m) }
func (*TokenFrozenDetail) ProtoMessage()    {}
func (*TokenFrozenDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{19}
}

func (m *TokenFrozenDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenFrozenDetail.Unmarshal(m, b)
}
func (m *TokenFrozenDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenFrozenDetail.Marshal(b, m, deterministic)
}
func (m *TokenFrozenDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenFrozenDetail.Merge(m, src)
}
func (m *TokenFrozenDetail) XXX_Size() int {
	return xxx_messageInfo_TokenFrozenDetail.Size(m)
}
func (m *TokenFrozenDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenFrozenDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TokenFrozenDetail proto.InternalMessageInfo

func (m *TokenFrozenDetail) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *TokenFrozenDetail) GetIsFrozen() bool {
	if m != nil {
		return m.IsFrozen
	}
	return false
}

type BlockID struct {
	Header  *Header `protobuf:"bytes,4,opt,name=header,proto3" json:"header,omitempty"`
	Bcname  string  `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Blockid []byte  `protobuf:"bytes,2,opt,name=blockid,proto3" json:"blockid,omitempty"`
	// if need content
	NeedContent          bool     `protobuf:"varint,3,opt,name=need_content,json=needContent,proto3" json:"need_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockID) Reset()         { *m = BlockID{} }
func (m *BlockID) String() string { return proto.CompactTextString(m) }
func (*BlockID) ProtoMessage()    {}
func (*BlockID) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{20}
}

func (m *BlockID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockID.Unmarshal(m, b)
}
func (m *BlockID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockID.Marshal(b, m, deterministic)
}
func (m *BlockID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockID.Merge(m, src)
}
func (m *BlockID) XXX_Size() int {
	return xxx_messageInfo_BlockID.Size(m)
}
func (m *BlockID) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockID.DiscardUnknown(m)
}

var xxx_messageInfo_BlockID proto.InternalMessageInfo

func (m *BlockID) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BlockID) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *BlockID) GetBlockid() []byte {
	if m != nil {
		return m.Blockid
	}
	return nil
}

func (m *BlockID) GetNeedContent() bool {
	if m != nil {
		return m.NeedContent
	}
	return false
}

type BlockHeight struct {
	Header               *Header  `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string   `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Height               int64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeight) Reset()         { *m = BlockHeight{} }
func (m *BlockHeight) String() string { return proto.CompactTextString(m) }
func (*BlockHeight) ProtoMessage()    {}
func (*BlockHeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{21}
}

func (m *BlockHeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeight.Unmarshal(m, b)
}
func (m *BlockHeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeight.Marshal(b, m, deterministic)
}
func (m *BlockHeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeight.Merge(m, src)
}
func (m *BlockHeight) XXX_Size() int {
	return xxx_messageInfo_BlockHeight.Size(m)
}
func (m *BlockHeight) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeight.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeight proto.InternalMessageInfo

func (m *BlockHeight) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BlockHeight) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *BlockHeight) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Block struct {
	Header               *Header            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string             `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Blockid              []byte             `protobuf:"bytes,3,opt,name=blockid,proto3" json:"blockid,omitempty"`
	Status               Block_EBlockStatus `protobuf:"varint,4,opt,name=status,proto3,enum=pb.Block_EBlockStatus" json:"status,omitempty"`
	Block                *pb.InternalBlock  `protobuf:"bytes,5,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{22}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *Block) GetBlockid() []byte {
	if m != nil {
		return m.Blockid
	}
	return nil
}

func (m *Block) GetStatus() Block_EBlockStatus {
	if m != nil {
		return m.Status
	}
	return Block_ERROR
}

func (m *Block) GetBlock() *pb.InternalBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

// BlockChain status
type BCStatus struct {
	Header *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// block name
	Bcname string `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	// ledger metadata
	Meta *pb.LedgerMeta `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	// The information of the longest block
	Block *pb.InternalBlock `protobuf:"bytes,4,opt,name=block,proto3" json:"block,omitempty"`
	// Utox information
	UtxoMeta *pb.UtxoMeta `protobuf:"bytes,5,opt,name=utxoMeta,proto3" json:"utxoMeta,omitempty"`
	// Branch info
	BranchBlockid        []string `protobuf:"bytes,6,rep,name=branchBlockid,proto3" json:"branchBlockid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BCStatus) Reset()         { *m = BCStatus{} }
func (m *BCStatus) String() string { return proto.CompactTextString(m) }
func (*BCStatus) ProtoMessage()    {}
func (*BCStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{23}
}

func (m *BCStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BCStatus.Unmarshal(m, b)
}
func (m *BCStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BCStatus.Marshal(b, m, deterministic)
}
func (m *BCStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BCStatus.Merge(m, src)
}
func (m *BCStatus) XXX_Size() int {
	return xxx_messageInfo_BCStatus.Size(m)
}
func (m *BCStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_BCStatus.DiscardUnknown(m)
}

var xxx_messageInfo_BCStatus proto.InternalMessageInfo

func (m *BCStatus) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BCStatus) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *BCStatus) GetMeta() *pb.LedgerMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *BCStatus) GetBlock() *pb.InternalBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *BCStatus) GetUtxoMeta() *pb.UtxoMeta {
	if m != nil {
		return m.UtxoMeta
	}
	return nil
}

func (m *BCStatus) GetBranchBlockid() []string {
	if m != nil {
		return m.BranchBlockid
	}
	return nil
}

type BCTipStatus struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	IsTrunkTip           bool     `protobuf:"varint,2,opt,name=is_trunk_tip,json=isTrunkTip,proto3" json:"is_trunk_tip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BCTipStatus) Reset()         { *m = BCTipStatus{} }
func (m *BCTipStatus) String() string { return proto.CompactTextString(m) }
func (*BCTipStatus) ProtoMessage()    {}
func (*BCTipStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{24}
}

func (m *BCTipStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BCTipStatus.Unmarshal(m, b)
}
func (m *BCTipStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BCTipStatus.Marshal(b, m, deterministic)
}
func (m *BCTipStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BCTipStatus.Merge(m, src)
}
func (m *BCTipStatus) XXX_Size() int {
	return xxx_messageInfo_BCTipStatus.Size(m)
}
func (m *BCTipStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_BCTipStatus.DiscardUnknown(m)
}

var xxx_messageInfo_BCTipStatus proto.InternalMessageInfo

func (m *BCTipStatus) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BCTipStatus) GetIsTrunkTip() bool {
	if m != nil {
		return m.IsTrunkTip
	}
	return false
}

type CommonIn struct {
	Header               *Header    `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ViewOption           ViewOption `protobuf:"varint,2,opt,name=view_option,json=viewOption,proto3,enum=pb.ViewOption" json:"view_option,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CommonIn) Reset()         { *m = CommonIn{} }
func (m *CommonIn) String() string { return proto.CompactTextString(m) }
func (*CommonIn) ProtoMessage()    {}
func (*CommonIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{25}
}

func (m *CommonIn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonIn.Unmarshal(m, b)
}
func (m *CommonIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonIn.Marshal(b, m, deterministic)
}
func (m *CommonIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonIn.Merge(m, src)
}
func (m *CommonIn) XXX_Size() int {
	return xxx_messageInfo_CommonIn.Size(m)
}
func (m *CommonIn) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonIn.DiscardUnknown(m)
}

var xxx_messageInfo_CommonIn proto.InternalMessageInfo

func (m *CommonIn) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonIn) GetViewOption() ViewOption {
	if m != nil {
		return m.ViewOption
	}
	return ViewOption_NONE
}

type BlockChains struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Blockchains          []string `protobuf:"bytes,2,rep,name=blockchains,proto3" json:"blockchains,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockChains) Reset()         { *m = BlockChains{} }
func (m *BlockChains) String() string { return proto.CompactTextString(m) }
func (*BlockChains) ProtoMessage()    {}
func (*BlockChains) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{26}
}

func (m *BlockChains) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockChains.Unmarshal(m, b)
}
func (m *BlockChains) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockChains.Marshal(b, m, deterministic)
}
func (m *BlockChains) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockChains.Merge(m, src)
}
func (m *BlockChains) XXX_Size() int {
	return xxx_messageInfo_BlockChains.Size(m)
}
func (m *BlockChains) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockChains.DiscardUnknown(m)
}

var xxx_messageInfo_BlockChains proto.InternalMessageInfo

func (m *BlockChains) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BlockChains) GetBlockchains() []string {
	if m != nil {
		return m.Blockchains
	}
	return nil
}

type SystemsStatusReply struct {
	Header               *Header        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	SystemsStatus        *SystemsStatus `protobuf:"bytes,2,opt,name=systems_status,json=systemsStatus,proto3" json:"systems_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SystemsStatusReply) Reset()         { *m = SystemsStatusReply{} }
func (m *SystemsStatusReply) String() string { return proto.CompactTextString(m) }
func (*SystemsStatusReply) ProtoMessage()    {}
func (*SystemsStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{27}
}

func (m *SystemsStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemsStatusReply.Unmarshal(m, b)
}
func (m *SystemsStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemsStatusReply.Marshal(b, m, deterministic)
}
func (m *SystemsStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemsStatusReply.Merge(m, src)
}
func (m *SystemsStatusReply) XXX_Size() int {
	return xxx_messageInfo_SystemsStatusReply.Size(m)
}
func (m *SystemsStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemsStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_SystemsStatusReply proto.InternalMessageInfo

func (m *SystemsStatusReply) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SystemsStatusReply) GetSystemsStatus() *SystemsStatus {
	if m != nil {
		return m.SystemsStatus
	}
	return nil
}

type SystemsStatus struct {
	Header               *Header     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	BcsStatus            []*BCStatus `protobuf:"bytes,2,rep,name=bcs_status,json=bcsStatus,proto3" json:"bcs_status,omitempty"`
	Speeds               *Speeds     `protobuf:"bytes,3,opt,name=speeds,proto3" json:"speeds,omitempty"`
	PeerUrls             []string    `protobuf:"bytes,4,rep,name=peerUrls,proto3" json:"peerUrls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SystemsStatus) Reset()         { *m = SystemsStatus{} }
func (m *SystemsStatus) String() string { return proto.CompactTextString(m) }
func (*SystemsStatus) ProtoMessage()    {}
func (*SystemsStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{28}
}

func (m *SystemsStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemsStatus.Unmarshal(m, b)
}
func (m *SystemsStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemsStatus.Marshal(b, m, deterministic)
}
func (m *SystemsStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemsStatus.Merge(m, src)
}
func (m *SystemsStatus) XXX_Size() int {
	return xxx_messageInfo_SystemsStatus.Size(m)
}
func (m *SystemsStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemsStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SystemsStatus proto.InternalMessageInfo

func (m *SystemsStatus) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SystemsStatus) GetBcsStatus() []*BCStatus {
	if m != nil {
		return m.BcsStatus
	}
	return nil
}

func (m *SystemsStatus) GetSpeeds() *Speeds {
	if m != nil {
		return m.Speeds
	}
	return nil
}

func (m *SystemsStatus) GetPeerUrls() []string {
	if m != nil {
		return m.PeerUrls
	}
	return nil
}

type Speeds struct {
	SumSpeeds            map[string]float64   `protobuf:"bytes,1,rep,name=SumSpeeds,proto3" json:"SumSpeeds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	BcSpeeds             map[string]*BCSpeeds `protobuf:"bytes,2,rep,name=BcSpeeds,proto3" json:"BcSpeeds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Speeds) Reset()         { *m = Speeds{} }
func (m *Speeds) String() string { return proto.CompactTextString(m) }
func (*Speeds) ProtoMessage()    {}
func (*Speeds) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{29}
}

func (m *Speeds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Speeds.Unmarshal(m, b)
}
func (m *Speeds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Speeds.Marshal(b, m, deterministic)
}
func (m *Speeds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Speeds.Merge(m, src)
}
func (m *Speeds) XXX_Size() int {
	return xxx_messageInfo_Speeds.Size(m)
}
func (m *Speeds) XXX_DiscardUnknown() {
	xxx_messageInfo_Speeds.DiscardUnknown(m)
}

var xxx_messageInfo_Speeds proto.InternalMessageInfo

func (m *Speeds) GetSumSpeeds() map[string]float64 {
	if m != nil {
		return m.SumSpeeds
	}
	return nil
}

func (m *Speeds) GetBcSpeeds() map[string]*BCSpeeds {
	if m != nil {
		return m.BcSpeeds
	}
	return nil
}

type BCSpeeds struct {
	BcSpeed              map[string]float64 `protobuf:"bytes,1,rep,name=BcSpeed,proto3" json:"BcSpeed,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BCSpeeds) Reset()         { *m = BCSpeeds{} }
func (m *BCSpeeds) String() string { return proto.CompactTextString(m) }
func (*BCSpeeds) ProtoMessage()    {}
func (*BCSpeeds) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{30}
}

func (m *BCSpeeds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BCSpeeds.Unmarshal(m, b)
}
func (m *BCSpeeds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BCSpeeds.Marshal(b, m, deterministic)
}
func (m *BCSpeeds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BCSpeeds.Merge(m, src)
}
func (m *BCSpeeds) XXX_Size() int {
	return xxx_messageInfo_BCSpeeds.Size(m)
}
func (m *BCSpeeds) XXX_DiscardUnknown() {
	xxx_messageInfo_BCSpeeds.DiscardUnknown(m)
}

var xxx_messageInfo_BCSpeeds proto.InternalMessageInfo

func (m *BCSpeeds) GetBcSpeed() map[string]float64 {
	if m != nil {
		return m.BcSpeed
	}
	return nil
}

// RawUrl return the node's  connect url
type RawUrl struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	RawUrl               string   `protobuf:"bytes,2,opt,name=rawUrl,proto3" json:"rawUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawUrl) Reset()         { *m = RawUrl{} }
func (m *RawUrl) String() string { return proto.CompactTextString(m) }
func (*RawUrl) ProtoMessage()    {}
func (*RawUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{31}
}

func (m *RawUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawUrl.Unmarshal(m, b)
}
func (m *RawUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawUrl.Marshal(b, m, deterministic)
}
func (m *RawUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawUrl.Merge(m, src)
}
func (m *RawUrl) XXX_Size() int {
	return xxx_messageInfo_RawUrl.Size(m)
}
func (m *RawUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_RawUrl.DiscardUnknown(m)
}

var xxx_messageInfo_RawUrl proto.InternalMessageInfo

func (m *RawUrl) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RawUrl) GetRawUrl() string {
	if m != nil {
		return m.RawUrl
	}
	return ""
}

type AK2AccountRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string   `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AK2AccountRequest) Reset()         { *m = AK2AccountRequest{} }
func (m *AK2AccountRequest) String() string { return proto.CompactTextString(m) }
func (*AK2AccountRequest) ProtoMessage()    {}
func (*AK2AccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{32}
}

func (m *AK2AccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AK2AccountRequest.Unmarshal(m, b)
}
func (m *AK2AccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AK2AccountRequest.Marshal(b, m, deterministic)
}
func (m *AK2AccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AK2AccountRequest.Merge(m, src)
}
func (m *AK2AccountRequest) XXX_Size() int {
	return xxx_messageInfo_AK2AccountRequest.Size(m)
}
func (m *AK2AccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AK2AccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AK2AccountRequest proto.InternalMessageInfo

func (m *AK2AccountRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AK2AccountRequest) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *AK2AccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type AK2AccountResponse struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string   `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Account              []string `protobuf:"bytes,3,rep,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AK2AccountResponse) Reset()         { *m = AK2AccountResponse{} }
func (m *AK2AccountResponse) String() string { return proto.CompactTextString(m) }
func (*AK2AccountResponse) ProtoMessage()    {}
func (*AK2AccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{33}
}

func (m *AK2AccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AK2AccountResponse.Unmarshal(m, b)
}
func (m *AK2AccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AK2AccountResponse.Marshal(b, m, deterministic)
}
func (m *AK2AccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AK2AccountResponse.Merge(m, src)
}
func (m *AK2AccountResponse) XXX_Size() int {
	return xxx_messageInfo_AK2AccountResponse.Size(m)
}
func (m *AK2AccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AK2AccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AK2AccountResponse proto.InternalMessageInfo

func (m *AK2AccountResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AK2AccountResponse) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *AK2AccountResponse) GetAccount() []string {
	if m != nil {
		return m.Account
	}
	return nil
}

// Query address contracts request
type AddressContractsRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string   `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	NeedContent          bool     `protobuf:"varint,4,opt,name=need_content,json=needContent,proto3" json:"need_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressContractsRequest) Reset()         { *m = AddressContractsRequest{} }
func (m *AddressContractsRequest) String() string { return proto.CompactTextString(m) }
func (*AddressContractsRequest) ProtoMessage()    {}
func (*AddressContractsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{34}
}

func (m *AddressContractsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressContractsRequest.Unmarshal(m, b)
}
func (m *AddressContractsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressContractsRequest.Marshal(b, m, deterministic)
}
func (m *AddressContractsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressContractsRequest.Merge(m, src)
}
func (m *AddressContractsRequest) XXX_Size() int {
	return xxx_messageInfo_AddressContractsRequest.Size(m)
}
func (m *AddressContractsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressContractsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressContractsRequest proto.InternalMessageInfo

func (m *AddressContractsRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AddressContractsRequest) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *AddressContractsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressContractsRequest) GetNeedContent() bool {
	if m != nil {
		return m.NeedContent
	}
	return false
}

// Query address contracts response
type AddressContractsResponse struct {
	Header               *Header                  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Contracts            map[string]*ContractList `protobuf:"bytes,2,rep,name=contracts,proto3" json:"contracts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AddressContractsResponse) Reset()         { *m = AddressContractsResponse{} }
func (m *AddressContractsResponse) String() string { return proto.CompactTextString(m) }
func (*AddressContractsResponse) ProtoMessage()    {}
func (*AddressContractsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{35}
}

func (m *AddressContractsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressContractsResponse.Unmarshal(m, b)
}
func (m *AddressContractsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressContractsResponse.Marshal(b, m, deterministic)
}
func (m *AddressContractsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressContractsResponse.Merge(m, src)
}
func (m *AddressContractsResponse) XXX_Size() int {
	return xxx_messageInfo_AddressContractsResponse.Size(m)
}
func (m *AddressContractsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressContractsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddressContractsResponse proto.InternalMessageInfo

func (m *AddressContractsResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AddressContractsResponse) GetContracts() map[string]*ContractList {
	if m != nil {
		return m.Contracts
	}
	return nil
}

type ContractList struct {
	ContractStatus       []*protos.ContractStatus `protobuf:"bytes,1,rep,name=contract_status,json=contractStatus,proto3" json:"contract_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ContractList) Reset()         { *m = ContractList{} }
func (m *ContractList) String() string { return proto.CompactTextString(m) }
func (*ContractList) ProtoMessage()    {}
func (*ContractList) Descriptor() ([]byte, []int) {
	return fileDescriptor_879fdf0f689195ad, []int{36}
}

func (m *ContractList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractList.Unmarshal(m, b)
}
func (m *ContractList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractList.Marshal(b, m, deterministic)
}
func (m *ContractList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractList.Merge(m, src)
}
func (m *ContractList) XXX_Size() int {
	return xxx_messageInfo_ContractList.Size(m)
}
func (m *ContractList) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractList.DiscardUnknown(m)
}

var xxx_messageInfo_ContractList proto.InternalMessageInfo

func (m *ContractList) GetContractStatus() []*protos.ContractStatus {
	if m != nil {
		return m.ContractStatus
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.XChainErrorEnum", XChainErrorEnum_name, XChainErrorEnum_value)
	proto.RegisterEnum("pb.ViewOption", ViewOption_name, ViewOption_value)
	proto.RegisterEnum("pb.Block_EBlockStatus", Block_EBlockStatus_name, Block_EBlockStatus_value)
	proto.RegisterType((*Header)(nil), "pb.Header")
	proto.RegisterType((*TxStatus)(nil), "pb.TxStatus")
	proto.RegisterType((*CommonReply)(nil), "pb.CommonReply")
	proto.RegisterType((*InvokeRPCRequest)(nil), "pb.InvokeRPCRequest")
	proto.RegisterType((*InvokeRPCResponse)(nil), "pb.InvokeRPCResponse")
	proto.RegisterType((*PreExecWithSelectUTXORequest)(nil), "pb.PreExecWithSelectUTXORequest")
	proto.RegisterType((*PreExecWithSelectUTXOResponse)(nil), "pb.PreExecWithSelectUTXOResponse")
	proto.RegisterType((*UtxoRequest)(nil), "pb.UtxoRequest")
	proto.RegisterType((*UtxoResponse)(nil), "pb.UtxoResponse")
	proto.RegisterType((*ContractStatDataRequest)(nil), "pb.ContractStatDataRequest")
	proto.RegisterType((*ContractStatDataResponse)(nil), "pb.ContractStatDataResponse")
	proto.RegisterType((*UtxoRecordDetails)(nil), "pb.UtxoRecordDetails")
	proto.RegisterType((*AclStatus)(nil), "pb.AclStatus")
	proto.RegisterType((*GetAccountContractsRequest)(nil), "pb.GetAccountContractsRequest")
	proto.RegisterType((*GetAccountContractsResponse)(nil), "pb.GetAccountContractsResponse")
	proto.RegisterType((*AddressStatus)(nil), "pb.AddressStatus")
	proto.RegisterType((*TokenDetail)(nil), "pb.TokenDetail")
	proto.RegisterType((*AddressBalanceStatus)(nil), "pb.AddressBalanceStatus")
	proto.RegisterType((*TokenFrozenDetails)(nil), "pb.TokenFrozenDetails")
	proto.RegisterType((*TokenFrozenDetail)(nil), "pb.TokenFrozenDetail")
	proto.RegisterType((*BlockID)(nil), "pb.BlockID")
	proto.RegisterType((*BlockHeight)(nil), "pb.BlockHeight")
	proto.RegisterType((*Block)(nil), "pb.Block")
	proto.RegisterType((*BCStatus)(nil), "pb.BCStatus")
	proto.RegisterType((*BCTipStatus)(nil), "pb.BCTipStatus")
	proto.RegisterType((*CommonIn)(nil), "pb.CommonIn")
	proto.RegisterType((*BlockChains)(nil), "pb.BlockChains")
	proto.RegisterType((*SystemsStatusReply)(nil), "pb.SystemsStatusReply")
	proto.RegisterType((*SystemsStatus)(nil), "pb.SystemsStatus")
	proto.RegisterType((*Speeds)(nil), "pb.Speeds")
	proto.RegisterMapType((map[string]*BCSpeeds)(nil), "pb.Speeds.BcSpeedsEntry")
	proto.RegisterMapType((map[string]float64)(nil), "pb.Speeds.SumSpeedsEntry")
	proto.RegisterType((*BCSpeeds)(nil), "pb.BCSpeeds")
	proto.RegisterMapType((map[string]float64)(nil), "pb.BCSpeeds.BcSpeedEntry")
	proto.RegisterType((*RawUrl)(nil), "pb.RawUrl")
	proto.RegisterType((*AK2AccountRequest)(nil), "pb.AK2AccountRequest")
	proto.RegisterType((*AK2AccountResponse)(nil), "pb.AK2AccountResponse")
	proto.RegisterType((*AddressContractsRequest)(nil), "pb.AddressContractsRequest")
	proto.RegisterType((*AddressContractsResponse)(nil), "pb.AddressContractsResponse")
	proto.RegisterMapType((map[string]*ContractList)(nil), "pb.AddressContractsResponse.ContractsEntry")
	proto.RegisterType((*ContractList)(nil), "pb.ContractList")
}

func init() {
	proto.RegisterFile("github.com/ownluke/xuperos/common/pb/rpc.proto", fileDescriptor_879fdf0f689195ad)
}

var fileDescriptor_879fdf0f689195ad = []byte{
	// 2858 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5a, 0x4f, 0x73, 0xdb, 0xc6,
	0xd9, 0x37, 0x44, 0x89, 0x22, 0x1f, 0x52, 0x14, 0xb5, 0x96, 0x64, 0x9a, 0x56, 0x1c, 0x79, 0x5f,
	0xbf, 0xb1, 0x5f, 0xe7, 0x8d, 0x38, 0x51, 0xda, 0x26, 0xe3, 0x49, 0x9b, 0x81, 0x20, 0x58, 0xe6,
	0x98, 0x06, 0x95, 0x25, 0x68, 0xcb, 0xed, 0x01, 0x03, 0x82, 0x6b, 0x09, 0x31, 0x05, 0x30, 0x00,
	0x28, 0x4b, 0x49, 0xa7, 0x93, 0x49, 0xfb, 0x05, 0xda, 0x7e, 0x81, 0x7e, 0x81, 0x7e, 0x86, 0xce,
	0x74, 0xa6, 0x3d, 0xf4, 0xda, 0x43, 0xa7, 0xe7, 0xf6, 0xd4, 0x7b, 0xef, 0x9d, 0xfd, 0x03, 0x10,
	0x20, 0x29, 0x47, 0x1a, 0x2b, 0xd3, 0x93, 0xb0, 0xcf, 0x9f, 0xdf, 0xf3, 0x67, 0x77, 0x9f, 0x7d,
	0x76, 0x29, 0xd8, 0x3a, 0x74, 0xa3, 0xa3, 0x51, 0x6f, 0xcb, 0xf1, 0x8f, 0x1b, 0xfe, 0x6b, 0x6f,
	0x30, 0x7a, 0x45, 0x1b, 0xa7, 0xa3, 0x21, 0x0d, 0xfc, 0xb0, 0xe1, 0xf8, 0xc7, 0xc7, 0xbe, 0xd7,
	0x18, 0xf6, 0x1a, 0xc1, 0xd0, 0xd9, 0x1a, 0x06, 0x7e, 0xe4, 0xa3, 0xb9, 0x61, 0xaf, 0xde, 0xbe,
	0x90, 0xce, 0xb0, 0xd7, 0x38, 0xf4, 0xfd, 0xc3, 0x01, 0xb5, 0x87, 0x6e, 0x28, 0x3f, 0x1b, 0xf6,
	0xd0, 0x6d, 0xd8, 0x9e, 0xe7, 0x47, 0x76, 0xe4, 0xfa, 0x5e, 0x28, 0x40, 0xeb, 0x5a, 0x0a, 0x90,
	0x03, 0x39, 0x47, 0xb6, 0xeb, 0xc9, 0x4f, 0x3f, 0xa0, 0x8d, 0x9e, 0x13, 0x36, 0x06, 0xb4, 0x7f,
	0x48, 0x83, 0xc6, 0xa9, 0xfc, 0x3b, 0xec, 0xc5, 0x9f, 0x12, 0xe4, 0x87, 0xdf, 0x05, 0xc2, 0xc5,
	0x98, 0x87, 0x5e, 0x14, 0xd8, 0x4e, 0x24, 0xd5, 0x3e, 0xbe, 0xa0, 0xda, 0x90, 0x06, 0xc7, 0x6e,
	0x18, 0xba, 0xbe, 0x27, 0x14, 0xf1, 0x4b, 0xc8, 0x3f, 0xa6, 0x76, 0x9f, 0x06, 0x68, 0x15, 0x16,
	0x06, 0xfe, 0xa1, 0xdb, 0xaf, 0x29, 0x9b, 0xca, 0xfd, 0x22, 0x11, 0x03, 0x74, 0x0b, 0x8a, 0x2f,
	0x03, 0xff, 0xd8, 0xf2, 0xfc, 0x3e, 0xad, 0xcd, 0x71, 0x4e, 0x81, 0x11, 0x0c, 0xbf, 0x4f, 0xd1,
	0xff, 0xc1, 0x02, 0x0d, 0x02, 0x3f, 0xa8, 0xe5, 0x36, 0x95, 0xfb, 0x95, 0xed, 0xeb, 0x5b, 0xc3,
	0xde, 0xd6, 0x81, 0xc6, 0x2c, 0xeb, 0x8c, 0xac, 0x7b, 0xa3, 0x63, 0x22, 0x24, 0xf0, 0x9f, 0x15,
	0x28, 0x98, 0xa7, 0x9d, 0xc8, 0x8e, 0x46, 0x21, 0xc2, 0x90, 0x3f, 0xe2, 0x46, 0xb9, 0xad, 0xd2,
	0x36, 0x30, 0x45, 0xe1, 0x06, 0x91, 0x1c, 0xb4, 0x0e, 0xf9, 0x9e, 0xe3, 0xd9, 0xc7, 0xb1, 0x55,
	0x39, 0x42, 0x08, 0xe6, 0xa3, 0x53, 0xb7, 0xcf, 0x4d, 0x96, 0x09, 0xff, 0x46, 0x1f, 0x40, 0x3e,
	0xe4, 0xc8, 0xb5, 0x79, 0xee, 0xc8, 0x1a, 0xc3, 0x33, 0x03, 0xdb, 0x0b, 0x6d, 0x87, 0xcd, 0x90,
	0x30, 0x4b, 0xa4, 0x10, 0xaa, 0x43, 0xa1, 0xef, 0x86, 0x91, 0xed, 0x39, 0xb4, 0xb6, 0xb0, 0xa9,
	0xdc, 0xcf, 0x91, 0x64, 0x8c, 0xde, 0x85, 0xb9, 0xe8, 0xb4, 0xb6, 0xc8, 0xdd, 0x5a, 0x9e, 0x80,
	0x21, 0x73, 0xd1, 0x29, 0xfe, 0x10, 0x4a, 0x1a, 0x5f, 0x1d, 0x84, 0x0e, 0x07, 0x67, 0x17, 0x09,
	0x05, 0xff, 0x51, 0x81, 0x6a, 0xd3, 0x3b, 0xf1, 0x5f, 0x51, 0xb2, 0xaf, 0x11, 0xfa, 0xe5, 0x88,
	0x86, 0xd1, 0x5b, 0xe5, 0xe0, 0x43, 0x28, 0x04, 0x02, 0x26, 0xac, 0xe5, 0x36, 0x73, 0xf7, 0x4b,
	0x2c, 0x62, 0x3e, 0xc1, 0x5b, 0xd2, 0x8e, 0xe0, 0x92, 0x44, 0x0c, 0x6d, 0x40, 0xd1, 0xf5, 0xdc,
	0xc8, 0xb5, 0x23, 0x3f, 0xe0, 0x59, 0x2a, 0x92, 0x31, 0x01, 0xdd, 0x81, 0xb2, 0x3d, 0x8a, 0x8e,
	0x2c, 0x26, 0xee, 0x06, 0x2c, 0x2b, 0xb9, 0xfb, 0x45, 0x52, 0x62, 0x34, 0x22, 0x48, 0xf8, 0x97,
	0x0a, 0xac, 0xa4, 0x82, 0x08, 0x87, 0xbe, 0x17, 0xd2, 0xb7, 0x8a, 0x62, 0x9b, 0x45, 0x21, 0x70,
	0xf8, 0x6c, 0x96, 0xb6, 0xd7, 0x27, 0xa3, 0x10, 0x5c, 0x92, 0xc8, 0xe1, 0x5f, 0xcf, 0xc1, 0xc6,
	0x7e, 0x40, 0xf5, 0x53, 0xea, 0x3c, 0x77, 0xa3, 0xa3, 0x0e, 0x1d, 0x50, 0x27, 0xea, 0x9a, 0x07,
	0xed, 0xab, 0x48, 0x6b, 0x0d, 0x16, 0xed, 0x7e, 0x3f, 0xa0, 0x61, 0xc8, 0xfd, 0x29, 0x92, 0x78,
	0x88, 0x36, 0xa1, 0x14, 0xf9, 0x91, 0x3d, 0x50, 0x8f, 0xfd, 0x91, 0x17, 0xf1, 0xfc, 0xe5, 0x48,
	0x9a, 0x84, 0x3e, 0x80, 0x42, 0xe8, 0x1e, 0x7a, 0x4d, 0xef, 0xa5, 0x5f, 0xcb, 0x73, 0xcb, 0x2b,
	0xcc, 0x72, 0xc7, 0x3d, 0xf4, 0xec, 0x68, 0x14, 0x50, 0xc6, 0x20, 0x89, 0x08, 0x5b, 0x82, 0x1e,
	0xa5, 0xfd, 0x96, 0xef, 0xbc, 0xe2, 0x8b, 0xad, 0x40, 0x92, 0x31, 0xda, 0x82, 0x45, 0x39, 0x6d,
	0x7c, 0x75, 0x96, 0xb6, 0x57, 0x19, 0xd2, 0xe4, 0x02, 0x22, 0xb1, 0x10, 0xfe, 0x83, 0x02, 0xef,
	0x9c, 0x93, 0x93, 0xff, 0xce, 0x2c, 0xa1, 0x2d, 0x80, 0x51, 0x74, 0xea, 0xb7, 0x47, 0xd1, 0x70,
	0x24, 0xb2, 0x55, 0xda, 0xae, 0x30, 0x9b, 0xdd, 0x84, 0x4a, 0x52, 0x12, 0xf8, 0x6f, 0x0a, 0x94,
	0x18, 0xeb, 0xfb, 0x9d, 0xc4, 0x0d, 0x28, 0x0e, 0x47, 0xbd, 0x81, 0xeb, 0xbc, 0xa2, 0x67, 0xf1,
	0x16, 0x48, 0x08, 0x8c, 0xcb, 0xe7, 0xd3, 0xa0, 0xb4, 0xcf, 0xf3, 0x5e, 0x24, 0x63, 0x02, 0x9b,
	0xaf, 0x51, 0x48, 0x03, 0x36, 0x9d, 0x7c, 0xbe, 0xca, 0x24, 0x19, 0x67, 0xe6, 0xb2, 0x90, 0x9d,
	0x4b, 0xfc, 0x0b, 0x28, 0x8b, 0xc0, 0x2e, 0x31, 0x13, 0x77, 0xa1, 0xc0, 0x72, 0xd3, 0x72, 0xc3,
	0xa8, 0x36, 0xc7, 0x77, 0x77, 0x21, 0xce, 0x1d, 0x49, 0x38, 0xe8, 0x2e, 0x2c, 0x71, 0xf7, 0xc4,
	0x74, 0xd3, 0xbe, 0x8c, 0x36, 0x4b, 0xc4, 0x5d, 0xb8, 0xa1, 0xc9, 0x93, 0x82, 0x15, 0xc1, 0x5d,
	0x3b, 0xb2, 0xaf, 0x20, 0xc9, 0xf8, 0x57, 0x0a, 0xd4, 0xa6, 0x71, 0xaf, 0x60, 0xb5, 0xfd, 0x3f,
	0xcc, 0xf7, 0xed, 0xc8, 0x96, 0x2b, 0xad, 0x16, 0xaf, 0xb4, 0x29, 0x5b, 0x5c, 0x0a, 0xff, 0x69,
	0x0e, 0x56, 0x44, 0x7a, 0x1d, 0x3f, 0xe8, 0xef, 0xd2, 0xc8, 0x76, 0x07, 0x6f, 0x77, 0xba, 0x6c,
	0x42, 0xc9, 0x76, 0x1c, 0xb6, 0xa3, 0x0d, 0xc6, 0x14, 0x39, 0x4d, 0x93, 0xd0, 0x8f, 0xa0, 0xe2,
	0x0f, 0xa9, 0x37, 0x36, 0x3b, 0xb9, 0xbe, 0x05, 0x95, 0x4c, 0x48, 0xa1, 0x87, 0x50, 0x1d, 0xf8,
	0xce, 0x2b, 0xda, 0x4f, 0x69, 0x2e, 0xcc, 0xd4, 0x9c, 0x92, 0x63, 0xba, 0x2f, 0x03, 0xff, 0xab,
	0x8c, 0xd5, 0xfc, 0x6c, 0xdd, 0x49, 0x39, 0x84, 0xa1, 0xdc, 0x77, 0xc3, 0xe1, 0xc0, 0x3e, 0xd3,
	0x78, 0xed, 0x5a, 0xe4, 0xb5, 0x2b, 0x43, 0xc3, 0xff, 0x52, 0xa0, 0xa8, 0x3a, 0x83, 0x2b, 0x38,
	0x9d, 0xbf, 0x3b, 0x7f, 0x18, 0xca, 0x71, 0xef, 0xc2, 0x45, 0xc4, 0x46, 0xcc, 0xd0, 0xd0, 0x6d,
	0x80, 0x63, 0x1a, 0x1d, 0xf9, 0x7d, 0x2e, 0x21, 0x36, 0x63, 0x8a, 0xc2, 0xf6, 0xaa, 0xe3, 0x7b,
	0x2f, 0xdd, 0xe0, 0x98, 0x8a, 0x44, 0x14, 0xc8, 0x98, 0x80, 0xde, 0x81, 0x9c, 0xed, 0x0c, 0xe4,
	0x19, 0x5e, 0x8a, 0x97, 0x90, 0xea, 0x0c, 0x08, 0xa3, 0xe3, 0x00, 0xea, 0x7b, 0x34, 0x52, 0x85,
	0x4b, 0xf1, 0xc2, 0x0a, 0xaf, 0xaa, 0xf4, 0x08, 0xd8, 0xa4, 0xf4, 0x88, 0x21, 0xdb, 0x2f, 0xb7,
	0x66, 0x1a, 0xbd, 0xc4, 0x96, 0x51, 0xa1, 0x1a, 0x27, 0x29, 0xb4, 0x64, 0xbb, 0x23, 0xca, 0xc3,
	0xfa, 0xac, 0x6d, 0x32, 0x0a, 0xc9, 0x72, 0x22, 0x2f, 0x08, 0x78, 0x08, 0x4b, 0xaa, 0x28, 0x86,
	0x97, 0x98, 0xea, 0x54, 0x41, 0x9d, 0xcb, 0x16, 0xd4, 0x3b, 0x90, 0xeb, 0x39, 0x71, 0x07, 0x22,
	0x9a, 0x25, 0xff, 0x15, 0xf5, 0xc4, 0x3e, 0x24, 0x8c, 0x87, 0xbf, 0x80, 0x52, 0x8a, 0x96, 0xca,
	0x9c, 0x32, 0x99, 0xb9, 0x9e, 0x3d, 0xe0, 0x0d, 0x99, 0xb4, 0x21, 0x87, 0x97, 0x69, 0x31, 0xbf,
	0x51, 0x60, 0x55, 0x86, 0xb7, 0x23, 0xb4, 0xaf, 0x24, 0xca, 0x07, 0x30, 0x1f, 0xbd, 0xec, 0xc7,
	0x61, 0xae, 0x27, 0x61, 0x3e, 0xe2, 0x3b, 0x4d, 0x16, 0x1d, 0xc2, 0x65, 0x98, 0x0b, 0x68, 0x9a,
	0x79, 0x6e, 0xd8, 0xf7, 0x20, 0x17, 0xbd, 0xec, 0xcb, 0x59, 0xe4, 0x4d, 0xab, 0x74, 0x5c, 0x28,
	0xf2, 0x9e, 0x81, 0x49, 0x5c, 0x26, 0x0b, 0x4d, 0x58, 0x99, 0xf2, 0x20, 0x9d, 0x5f, 0x25, 0x9b,
	0xdf, 0x3a, 0x14, 0xdc, 0x50, 0xc8, 0xf2, 0xc0, 0x0b, 0x24, 0x19, 0xe3, 0x6f, 0x15, 0x58, 0xdc,
	0x61, 0xc5, 0xa8, 0xb9, 0x9b, 0xca, 0xe1, 0xfc, 0x05, 0xf6, 0xc5, 0xf4, 0xec, 0x32, 0x18, 0xb7,
	0xcf, 0x4d, 0x94, 0x49, 0x3c, 0x64, 0x7d, 0x27, 0x3b, 0x2a, 0x2d, 0xb6, 0x50, 0xa9, 0xdc, 0x36,
	0x05, 0x52, 0x62, 0x34, 0x4d, 0x90, 0xb0, 0x0d, 0x25, 0xee, 0xc3, 0x63, 0xea, 0x1e, 0x1e, 0xa5,
	0xf7, 0x67, 0xee, 0xd2, 0x7e, 0xac, 0x33, 0x5d, 0x86, 0xc2, 0xdd, 0xc8, 0x11, 0x39, 0xc2, 0xff,
	0x56, 0x60, 0x81, 0xdb, 0x78, 0xdb, 0xdd, 0x1f, 0x47, 0x99, 0xcb, 0x46, 0xb9, 0x35, 0x71, 0x3d,
	0xe1, 0x6b, 0x88, 0x1b, 0xdc, 0xd2, 0xf9, 0x9f, 0x89, 0xfb, 0xc9, 0x3d, 0x58, 0xe0, 0xaa, 0xf2,
	0x7c, 0x58, 0x11, 0xed, 0x5f, 0x44, 0x03, 0xcf, 0x1e, 0x70, 0x79, 0x22, 0xf8, 0xf8, 0xc7, 0x50,
	0x4e, 0x03, 0xa0, 0x22, 0x2c, 0xe8, 0x84, 0xb4, 0x49, 0xf5, 0x1a, 0xfb, 0x34, 0x49, 0xd7, 0x78,
	0x52, 0x55, 0x10, 0x40, 0x7e, 0x87, 0xa8, 0x86, 0xf6, 0xb8, 0x3a, 0x87, 0x4a, 0xb0, 0x68, 0xb4,
	0xf5, 0x83, 0x66, 0xc7, 0xac, 0xe6, 0xf0, 0x3f, 0x14, 0x28, 0xec, 0x68, 0x57, 0x50, 0xf5, 0x31,
	0xcc, 0x1f, 0xd3, 0xe4, 0xd4, 0xe6, 0x67, 0x52, 0x8b, 0x5f, 0x6a, 0x9f, 0x52, 0x76, 0x56, 0x33,
	0xde, 0x38, 0xa8, 0xf9, 0x37, 0x07, 0x85, 0xee, 0x8b, 0xf6, 0x87, 0xa9, 0xca, 0x04, 0x94, 0xe3,
	0x43, 0x8e, 0xc3, 0x25, 0x5c, 0xd6, 0x02, 0xf5, 0x02, 0xdb, 0x73, 0x8e, 0x76, 0x64, 0xde, 0xf3,
	0xfc, 0xda, 0x92, 0x25, 0xe2, 0x0e, 0x94, 0x76, 0x34, 0xd3, 0x1d, 0x5e, 0x22, 0xce, 0x4d, 0x28,
	0xbb, 0xa1, 0x15, 0x05, 0x23, 0xef, 0x95, 0x15, 0xb9, 0x43, 0xb9, 0x31, 0xc0, 0x0d, 0x4d, 0x46,
	0x32, 0xdd, 0x21, 0xb6, 0xa0, 0x20, 0x6e, 0x81, 0x4d, 0xef, 0x42, 0x88, 0x0d, 0x28, 0x9d, 0xb8,
	0xf4, 0xb5, 0xe5, 0x0f, 0xd9, 0x45, 0x92, 0x03, 0x56, 0x44, 0xa2, 0x9e, 0xb9, 0xf4, 0x75, 0x9b,
	0x53, 0x09, 0x9c, 0x24, 0xdf, 0xdc, 0x6b, 0x16, 0x00, 0xdf, 0xe4, 0x17, 0xf5, 0xba, 0xc4, 0x33,
	0xc8, 0xaf, 0xfe, 0xe2, 0x6c, 0x28, 0x92, 0x34, 0x09, 0x07, 0x80, 0x3a, 0x67, 0x61, 0x44, 0x8f,
	0x65, 0xfd, 0xbf, 0xf0, 0x15, 0x16, 0x7d, 0x02, 0x95, 0x50, 0x68, 0x8e, 0x8f, 0x9e, 0xf1, 0x25,
	0x27, 0x83, 0xb9, 0x14, 0xa6, 0x87, 0xf8, 0x77, 0x0a, 0x2c, 0x65, 0x04, 0x2e, 0x64, 0xef, 0x7d,
	0x80, 0x9e, 0x33, 0x71, 0xcc, 0xf1, 0x65, 0x10, 0xaf, 0x57, 0x52, 0xec, 0x39, 0x29, 0xc0, 0x70,
	0x48, 0x69, 0x3f, 0x4c, 0xd7, 0x84, 0x0e, 0xa7, 0x10, 0xc9, 0x61, 0x75, 0x6e, 0x48, 0x69, 0xd0,
	0x0d, 0x06, 0x6c, 0x17, 0xb2, 0xcc, 0x24, 0x63, 0xfc, 0xcd, 0x1c, 0xe4, 0x85, 0x38, 0xfa, 0x18,
	0x8a, 0x9d, 0xd1, 0xb1, 0x18, 0xd4, 0x14, 0x6e, 0xf6, 0xe6, 0x18, 0x6d, 0x2b, 0xe1, 0xe9, 0x5e,
	0x14, 0x9c, 0x91, 0xb1, 0x2c, 0xfa, 0x01, 0x14, 0x76, 0x1c, 0xa9, 0x27, 0xdc, 0xad, 0xa5, 0xf4,
	0x62, 0x96, 0x50, 0x4b, 0x24, 0xeb, 0x9f, 0x42, 0x25, 0x0b, 0x89, 0xaa, 0x90, 0x63, 0xd7, 0x13,
	0x51, 0xb8, 0xd8, 0x27, 0x5a, 0x85, 0x85, 0x13, 0x7b, 0x30, 0x12, 0x7b, 0x4e, 0x21, 0x62, 0xf0,
	0x70, 0xee, 0x13, 0xa5, 0xde, 0x84, 0xa5, 0x0c, 0xf0, 0x0c, 0x65, 0x9c, 0x56, 0x1e, 0xa7, 0x50,
	0xe4, 0x66, 0x0c, 0x85, 0xbf, 0xe6, 0x95, 0x40, 0x84, 0xf2, 0x11, 0x2c, 0x4a, 0xd8, 0x74, 0x06,
	0x62, 0x76, 0x1c, 0x8b, 0x08, 0x25, 0x96, 0xac, 0x3f, 0x84, 0x72, 0x9a, 0x71, 0x99, 0x38, 0xf0,
	0x2e, 0xe4, 0x89, 0xfd, 0xba, 0x1b, 0x0c, 0x2e, 0x5a, 0x84, 0x02, 0x2e, 0x1d, 0x17, 0x21, 0x31,
	0xc2, 0x2e, 0xac, 0xa8, 0x4f, 0xb6, 0x65, 0x8b, 0xf5, 0xbd, 0xde, 0x24, 0xf1, 0x17, 0x80, 0xd2,
	0xa6, 0xae, 0xe0, 0xde, 0x93, 0x69, 0x1d, 0x73, 0xe9, 0xd6, 0xf1, 0x37, 0x0a, 0xdc, 0x90, 0x5d,
	0xcd, 0x95, 0x37, 0xab, 0xb3, 0xef, 0xc9, 0x93, 0x87, 0xf2, 0xfc, 0xf4, 0xa1, 0xfc, 0x77, 0x05,
	0x6a, 0xd3, 0x4e, 0x5d, 0x22, 0x0f, 0x4d, 0xde, 0xc1, 0x0b, 0x45, 0xb9, 0x5f, 0xde, 0x67, 0x62,
	0xe7, 0x81, 0x26, 0xad, 0x6d, 0xbc, 0xf3, 0x12, 0xed, 0xba, 0x01, 0x95, 0x2c, 0x73, 0xc6, 0xda,
	0x7b, 0x2f, 0xbb, 0x0d, 0xaa, 0xcc, 0x54, 0xac, 0xc4, 0x6e, 0xd3, 0xe9, 0xd5, 0xd8, 0x86, 0x72,
	0x9a, 0x85, 0x3e, 0x83, 0xa4, 0x8f, 0x8e, 0xeb, 0x91, 0xf2, 0xc6, 0xb6, 0xbb, 0xe2, 0x64, 0xc6,
	0x0f, 0x7e, 0x9f, 0x87, 0xe5, 0x89, 0x66, 0x8d, 0x9d, 0xc3, 0x9d, 0xae, 0xa6, 0xe9, 0x9d, 0x4e,
	0xf5, 0x1a, 0xaa, 0x42, 0xb9, 0x6b, 0x3c, 0x31, 0xda, 0xcf, 0x2d, 0x71, 0x7a, 0x2b, 0x08, 0x41,
	0x45, 0x6b, 0x1b, 0x86, 0xae, 0x99, 0x16, 0xd1, 0x1f, 0x75, 0x3b, 0x7a, 0x75, 0x0e, 0xdd, 0x84,
	0x35, 0xa3, 0x6d, 0x5a, 0xba, 0xd1, 0xee, 0xee, 0x3d, 0xb6, 0xba, 0xe6, 0x41, 0x5b, 0x8a, 0xe7,
	0x10, 0x86, 0xdb, 0x6c, 0xfc, 0xec, 0xa9, 0xa5, 0xb6, 0x88, 0xae, 0xee, 0xbe, 0xb0, 0xba, 0x86,
	0xd6, 0x36, 0x1e, 0x35, 0xc9, 0x53, 0x29, 0x33, 0x8f, 0xea, 0xb0, 0x2e, 0x65, 0x18, 0xca, 0xa3,
	0x76, 0xd7, 0xd8, 0x95, 0xbc, 0x05, 0xb4, 0x09, 0x1b, 0x4d, 0x63, 0xbf, 0x6b, 0x5a, 0xed, 0xae,
	0xc9, 0xfe, 0x70, 0x3b, 0x9f, 0x77, 0xd5, 0x96, 0x94, 0xc8, 0xa3, 0x75, 0x40, 0xe6, 0xc1, 0x94,
	0xe6, 0x22, 0x5a, 0x81, 0x25, 0xf3, 0xc0, 0xea, 0x34, 0xf7, 0x0c, 0x49, 0x2a, 0xa0, 0x1b, 0x70,
	0x7d, 0xa7, 0xd5, 0xd6, 0x9e, 0x68, 0x8f, 0xd5, 0xa6, 0xc1, 0x54, 0x44, 0xbb, 0x51, 0x64, 0x41,
	0x3d, 0x53, 0x5b, 0xcd, 0x5d, 0xd5, 0xd4, 0xa5, 0x30, 0xa0, 0x5b, 0x70, 0x43, 0x53, 0x0d, 0x86,
	0xdb, 0x79, 0x61, 0x68, 0x16, 0x57, 0x94, 0xcc, 0x12, 0x43, 0x8a, 0xa3, 0x48, 0x33, 0xca, 0x68,
	0x0d, 0x56, 0x64, 0x2c, 0xfb, 0x2d, 0xf5, 0x85, 0x24, 0x2f, 0xa1, 0x0a, 0xc0, 0x73, 0xb5, 0x15,
	0x8b, 0x55, 0xd0, 0x75, 0x58, 0x66, 0xc8, 0x22, 0x23, 0x82, 0xb8, 0xcc, 0x74, 0x25, 0x18, 0x73,
	0x4b, 0x92, 0xab, 0x2c, 0x3d, 0xa4, 0xdd, 0x36, 0xad, 0x69, 0xde, 0x8a, 0x0c, 0x7e, 0xb7, 0xbb,
	0xdf, 0x6a, 0x6a, 0x63, 0xe7, 0xaf, 0xb3, 0x19, 0xe9, 0xe8, 0xe4, 0x59, 0x53, 0xd3, 0xe5, 0x2c,
	0xc5, 0x79, 0x59, 0x65, 0x56, 0xcc, 0x83, 0x5d, 0xd5, 0x54, 0xd3, 0xb9, 0x59, 0x63, 0x33, 0xcd,
	0xd2, 0xd5, 0x8a, 0x31, 0x6e, 0xb2, 0x04, 0x98, 0x07, 0xd6, 0x23, 0x5d, 0xb7, 0x52, 0x93, 0x2b,
	0x98, 0x75, 0x16, 0x00, 0x9f, 0xe7, 0x14, 0xc6, 0x06, 0x5a, 0x85, 0xea, 0xee, 0x7e, 0xbb, 0x63,
	0x7d, 0xde, 0xd5, 0x49, 0x1c, 0xd6, 0xbb, 0x2c, 0x57, 0xe4, 0x79, 0x47, 0x37, 0xad, 0xa6, 0xc1,
	0x93, 0x2c, 0x19, 0x77, 0x04, 0x43, 0xd5, 0x5a, 0x13, 0x0c, 0x8c, 0x6a, 0xb0, 0xba, 0xa7, 0x76,
	0xa6, 0xcd, 0xfe, 0x0f, 0xda, 0x80, 0x9a, 0x79, 0x60, 0x3d, 0xd3, 0x49, 0xa7, 0xd9, 0x36, 0x26,
	0xf4, 0xee, 0xa2, 0x3b, 0xf0, 0x8e, 0xd6, 0x7e, 0xba, 0xdf, 0x6a, 0xaa, 0x86, 0xa6, 0x5b, 0xda,
	0x63, 0x5d, 0x7b, 0xc2, 0x41, 0xd4, 0xfd, 0x7d, 0xd2, 0x7e, 0xa6, 0xef, 0x56, 0xff, 0x97, 0x89,
	0xa8, 0x9a, 0xd6, 0xee, 0x1a, 0xa6, 0xa5, 0xb5, 0x0d, 0x93, 0xa8, 0x9a, 0x69, 0x75, 0x4c, 0xd5,
	0xec, 0x76, 0x24, 0xca, 0x7b, 0x2c, 0x77, 0xc2, 0x46, 0xf3, 0x11, 0x4b, 0x2a, 0x33, 0x24, 0x58,
	0xf7, 0x1f, 0x3c, 0x01, 0x18, 0x37, 0x45, 0xa8, 0x00, 0xf3, 0x46, 0xdb, 0xd0, 0xab, 0xd7, 0x58,
	0x1f, 0xdb, 0xd2, 0x77, 0xf7, 0x74, 0xb6, 0x41, 0xca, 0x50, 0x60, 0x99, 0x69, 0x1a, 0x8f, 0xda,
	0xd5, 0x39, 0x36, 0xf1, 0xa2, 0xc3, 0xe5, 0xe3, 0x1c, 0x6b, 0x7e, 0xf7, 0x75, 0x9d, 0x74, 0xaa,
	0xf3, 0xdb, 0x7f, 0xa9, 0x40, 0xfe, 0x80, 0xb7, 0x3f, 0xe8, 0x05, 0x54, 0xc7, 0x6f, 0xa3, 0x3b,
	0x67, 0x1d, 0xf7, 0x2b, 0x8a, 0x96, 0xc7, 0xef, 0x27, 0xbc, 0xa4, 0xd6, 0xab, 0x63, 0x82, 0x7c,
	0x72, 0xc6, 0xdf, 0xfe, 0xf5, 0x9f, 0xbf, 0x9d, 0xdb, 0xc0, 0x37, 0x1a, 0x27, 0x1f, 0x36, 0x42,
	0x0e, 0x60, 0xb1, 0x16, 0xd4, 0xea, 0x9d, 0x59, 0xa1, 0xfb, 0x15, 0x7d, 0xa8, 0x3c, 0x40, 0x9f,
	0x41, 0x7e, 0xdf, 0x0f, 0x23, 0xf3, 0x14, 0xf1, 0x13, 0x36, 0xfe, 0xa1, 0xa3, 0xbe, 0x2c, 0x0a,
	0x4d, 0xf2, 0x73, 0x01, 0x5e, 0xe7, 0x60, 0x55, 0x5c, 0x62, 0x60, 0x43, 0x3f, 0x8c, 0xac, 0xe8,
	0x94, 0x01, 0xec, 0x40, 0xe1, 0xf3, 0x11, 0x0d, 0xce, 0x54, 0xad, 0x85, 0x96, 0x78, 0x21, 0x8c,
	0x9f, 0x63, 0xea, 0xd9, 0x21, 0xae, 0x71, 0x04, 0x84, 0x97, 0x18, 0xc2, 0x97, 0x4c, 0xc7, 0xb2,
	0x9d, 0x01, 0xc3, 0xb0, 0x61, 0x99, 0x63, 0xa4, 0x1e, 0x7f, 0xd6, 0xb2, 0xcf, 0x43, 0xf2, 0x3e,
	0x5a, 0x9f, 0x4d, 0xc6, 0x9b, 0x1c, 0xba, 0x8e, 0xd7, 0xc6, 0xd0, 0x3c, 0xd0, 0x80, 0x4b, 0x31,
	0x13, 0x5f, 0xc3, 0x1a, 0x37, 0x31, 0xf9, 0x1e, 0x87, 0x6e, 0xa5, 0x2b, 0xea, 0xc4, 0x4b, 0x63,
	0x7d, 0x63, 0x36, 0x53, 0xe6, 0xf7, 0x1e, 0xb7, 0x7a, 0x07, 0x6f, 0x8c, 0xad, 0x66, 0xea, 0xad,
	0xd5, 0xb7, 0x23, 0x9b, 0x19, 0xff, 0x39, 0x5c, 0x9f, 0xf1, 0x86, 0x82, 0x6e, 0x33, 0xf4, 0xf3,
	0x5f, 0x74, 0xea, 0xef, 0x9e, 0xcb, 0x97, 0x0e, 0xdc, 0xe5, 0x0e, 0xdc, 0xc6, 0x37, 0x99, 0x03,
	0x87, 0x34, 0xb2, 0xe4, 0xd1, 0x9b, 0xb8, 0x11, 0x32, 0xeb, 0x3f, 0x81, 0x45, 0x1e, 0xfa, 0xd4,
	0x1c, 0x67, 0x46, 0xf8, 0x06, 0x07, 0x5b, 0xc1, 0xe5, 0x71, 0x34, 0x62, 0x86, 0x0d, 0x80, 0x3d,
	0x1a, 0xc9, 0xfb, 0x3d, 0x5a, 0x49, 0x1d, 0x76, 0x12, 0x67, 0x9a, 0x84, 0xeb, 0x1c, 0x6c, 0x15,
	0x2f, 0xc7, 0x9e, 0xc9, 0x5b, 0x3b, 0xc3, 0x73, 0xa1, 0x3a, 0xc6, 0x8b, 0xaf, 0xf9, 0x29, 0x88,
	0xcc, 0x13, 0x48, 0xfd, 0x5c, 0x0e, 0xbe, 0xc3, 0x6d, 0xdc, 0xc2, 0xeb, 0x13, 0x36, 0xac, 0x3e,
	0xc7, 0x64, 0xa6, 0x7e, 0xc6, 0x4d, 0x89, 0x47, 0x81, 0xcb, 0x05, 0x30, 0x05, 0x2e, 0x9e, 0x27,
	0xd3, 0x71, 0x7c, 0x0a, 0x05, 0x16, 0x07, 0xbf, 0xfa, 0x95, 0x92, 0x8b, 0x71, 0x73, 0xb7, 0x5e,
	0x4c, 0x06, 0xd9, 0x35, 0xcf, 0x7d, 0x64, 0x64, 0xa6, 0x4d, 0x44, 0x16, 0xd8, 0x70, 0xe7, 0x4c,
	0x3e, 0x11, 0x2c, 0x27, 0x8a, 0x82, 0x90, 0x46, 0xca, 0x6c, 0xe6, 0x04, 0x89, 0x6d, 0x65, 0xf1,
	0x16, 0x20, 0x66, 0xea, 0x7a, 0x8c, 0xc9, 0x4f, 0x6d, 0x79, 0xcb, 0xc8, 0x5c, 0x3f, 0xea, 0x99,
	0x11, 0xbe, 0xc5, 0x61, 0xd7, 0x70, 0x35, 0x81, 0x75, 0x44, 0xab, 0xc0, 0xf0, 0x9a, 0x50, 0xc9,
	0xe0, 0x49, 0xa8, 0xf8, 0xfe, 0x58, 0x1f, 0xfb, 0x2b, 0xd8, 0x71, 0xb8, 0x28, 0x85, 0x26, 0x2e,
	0x70, 0xa8, 0x0b, 0xcb, 0x7b, 0x34, 0x12, 0xd7, 0xa9, 0xb4, 0x5b, 0x09, 0xd6, 0xfa, 0xf4, 0x7d,
	0x8c, 0xd7, 0x9d, 0x0d, 0x0e, 0xb9, 0x8e, 0x57, 0x62, 0xc8, 0xf0, 0x2c, 0x1c, 0x7b, 0x78, 0x0f,
	0x8a, 0x7b, 0x34, 0x32, 0x68, 0xd4, 0x25, 0xad, 0x09, 0x40, 0xde, 0xbc, 0x89, 0xee, 0x1c, 0x5f,
	0x43, 0x6d, 0x80, 0x71, 0x09, 0xbd, 0x48, 0xf1, 0xbc, 0xcd, 0xed, 0xd6, 0xf0, 0xf5, 0x89, 0xe2,
	0x19, 0x5a, 0x27, 0xdb, 0xcc, 0xf2, 0x37, 0x0a, 0xac, 0xcd, 0xfc, 0xed, 0x0a, 0x6d, 0x32, 0xac,
	0x37, 0xfd, 0xd4, 0x57, 0xbf, 0xf3, 0x06, 0x89, 0x59, 0xb5, 0x7b, 0x18, 0x50, 0x7a, 0x4a, 0x1d,
	0x2b, 0xe5, 0x86, 0x28, 0x9b, 0x95, 0x71, 0x75, 0xd8, 0x39, 0x53, 0x9f, 0x88, 0xaa, 0x39, 0x75,
	0x97, 0x10, 0xb9, 0x9d, 0xee, 0xfb, 0xb3, 0x65, 0x33, 0x5d, 0x3f, 0x7a, 0x67, 0x96, 0xcd, 0x57,
	0xe9, 0x89, 0xa8, 0x5c, 0x13, 0xbd, 0xad, 0x28, 0x9a, 0xe7, 0xf4, 0xf6, 0xa2, 0x68, 0x9e, 0xd7,
	0x0e, 0xcf, 0xa8, 0x59, 0x42, 0x32, 0x5b, 0xb3, 0x0c, 0x58, 0x94, 0xf9, 0x41, 0x33, 0x7f, 0x43,
	0x14, 0x07, 0xc1, 0xd4, 0xaf, 0xba, 0x13, 0xa7, 0x94, 0x48, 0xdb, 0x43, 0xe5, 0xc1, 0xce, 0x7b,
	0x3f, 0xbd, 0x7b, 0x91, 0x7f, 0x9a, 0xe8, 0xe5, 0x79, 0x63, 0xfc, 0xd1, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xa6, 0xc8, 0xe2, 0x16, 0x97, 0x21, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// XchainClient is the client API for Xchain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XchainClient interface {
	// SelectUTXOBySize merge many utxos into a few of utxos
	SelectUTXOBySize(ctx context.Context, in *UtxoRequest, opts ...grpc.CallOption) (*UtxoResponse, error)
	// PostTx post Transaction to a node
	PostTx(ctx context.Context, in *TxStatus, opts ...grpc.CallOption) (*CommonReply, error)
	QueryACL(ctx context.Context, in *AclStatus, opts ...grpc.CallOption) (*AclStatus, error)
	QueryUtxoRecord(ctx context.Context, in *UtxoRecordDetails, opts ...grpc.CallOption) (*UtxoRecordDetails, error)
	QueryContractStatData(ctx context.Context, in *ContractStatDataRequest, opts ...grpc.CallOption) (*ContractStatDataResponse, error)
	GetAccountContracts(ctx context.Context, in *GetAccountContractsRequest, opts ...grpc.CallOption) (*GetAccountContractsResponse, error)
	// QueryTx query Transaction by TxStatus,
	// Bcname and Txid are required for this
	QueryTx(ctx context.Context, in *TxStatus, opts ...grpc.CallOption) (*TxStatus, error)
	// GetBalance get balance of an address,
	// Address is required for this
	GetBalance(ctx context.Context, in *AddressStatus, opts ...grpc.CallOption) (*AddressStatus, error)
	// GetFrozenBalance get two kinds of balance
	// 1. Still be frozen of an address
	// 2. Available now of an address
	// Address is required for this
	GetBalanceDetail(ctx context.Context, in *AddressBalanceStatus, opts ...grpc.CallOption) (*AddressBalanceStatus, error)
	// GetFrozenBalance get balance that still be frozen of an address,
	// Address is required for this
	GetFrozenBalance(ctx context.Context, in *AddressStatus, opts ...grpc.CallOption) (*AddressStatus, error)
	// GetBlock get block by blockid and return if the block in trunk or in branch
	GetBlock(ctx context.Context, in *BlockID, opts ...grpc.CallOption) (*Block, error)
	// GetBlockByHeight get block by height and return if the block in trunk or in
	// branch
	GetBlockByHeight(ctx context.Context, in *BlockHeight, opts ...grpc.CallOption) (*Block, error)
	GetBlockChainStatus(ctx context.Context, in *BCStatus, opts ...grpc.CallOption) (*BCStatus, error)
	// Get blockchains query blockchains
	GetBlockChains(ctx context.Context, in *CommonIn, opts ...grpc.CallOption) (*BlockChains, error)
	// GetSystemStatus query system status
	GetSystemStatus(ctx context.Context, in *CommonIn, opts ...grpc.CallOption) (*SystemsStatusReply, error)
	// GetNetURL return net url
	GetNetURL(ctx context.Context, in *CommonIn, opts ...grpc.CallOption) (*RawUrl, error)
	// 新的Select utxos接口, 不需要签名，可以支持选择账户的utxo
	SelectUTXO(ctx context.Context, in *UtxoRequest, opts ...grpc.CallOption) (*UtxoResponse, error)
	// PreExecWithSelectUTXO preExec & selectUtxo
	PreExecWithSelectUTXO(ctx context.Context, in *PreExecWithSelectUTXORequest, opts ...grpc.CallOption) (*PreExecWithSelectUTXOResponse, error)
	// GetAccountByAK get account sets contain a specific address
	GetAccountByAK(ctx context.Context, in *AK2AccountRequest, opts ...grpc.CallOption) (*AK2AccountResponse, error)
	// GetAddressContracts get contracts of accounts contain a specific address
	GetAddressContracts(ctx context.Context, in *AddressContractsRequest, opts ...grpc.CallOption) (*AddressContractsResponse, error)
	//预执行合约
	PreExec(ctx context.Context, in *InvokeRPCRequest, opts ...grpc.CallOption) (*InvokeRPCResponse, error)
}

type xchainClient struct {
	cc grpc.ClientConnInterface
}

func NewXchainClient(cc grpc.ClientConnInterface) XchainClient {
	return &xchainClient{cc}
}

func (c *xchainClient) SelectUTXOBySize(ctx context.Context, in *UtxoRequest, opts ...grpc.CallOption) (*UtxoResponse, error) {
	out := new(UtxoResponse)
	err := c.cc.Invoke(ctx, "/pb.Xchain/SelectUTXOBySize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) PostTx(ctx context.Context, in *TxStatus, opts ...grpc.CallOption) (*CommonReply, error) {
	out := new(CommonReply)
	err := c.cc.Invoke(ctx, "/pb.Xchain/PostTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) QueryACL(ctx context.Context, in *AclStatus, opts ...grpc.CallOption) (*AclStatus, error) {
	out := new(AclStatus)
	err := c.cc.Invoke(ctx, "/pb.Xchain/QueryACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) QueryUtxoRecord(ctx context.Context, in *UtxoRecordDetails, opts ...grpc.CallOption) (*UtxoRecordDetails, error) {
	out := new(UtxoRecordDetails)
	err := c.cc.Invoke(ctx, "/pb.Xchain/QueryUtxoRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) QueryContractStatData(ctx context.Context, in *ContractStatDataRequest, opts ...grpc.CallOption) (*ContractStatDataResponse, error) {
	out := new(ContractStatDataResponse)
	err := c.cc.Invoke(ctx, "/pb.Xchain/QueryContractStatData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetAccountContracts(ctx context.Context, in *GetAccountContractsRequest, opts ...grpc.CallOption) (*GetAccountContractsResponse, error) {
	out := new(GetAccountContractsResponse)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetAccountContracts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) QueryTx(ctx context.Context, in *TxStatus, opts ...grpc.CallOption) (*TxStatus, error) {
	out := new(TxStatus)
	err := c.cc.Invoke(ctx, "/pb.Xchain/QueryTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetBalance(ctx context.Context, in *AddressStatus, opts ...grpc.CallOption) (*AddressStatus, error) {
	out := new(AddressStatus)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetBalanceDetail(ctx context.Context, in *AddressBalanceStatus, opts ...grpc.CallOption) (*AddressBalanceStatus, error) {
	out := new(AddressBalanceStatus)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetBalanceDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetFrozenBalance(ctx context.Context, in *AddressStatus, opts ...grpc.CallOption) (*AddressStatus, error) {
	out := new(AddressStatus)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetFrozenBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetBlock(ctx context.Context, in *BlockID, opts ...grpc.CallOption) (*Block, error) {
	out := new(Block)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetBlockByHeight(ctx context.Context, in *BlockHeight, opts ...grpc.CallOption) (*Block, error) {
	out := new(Block)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetBlockChainStatus(ctx context.Context, in *BCStatus, opts ...grpc.CallOption) (*BCStatus, error) {
	out := new(BCStatus)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetBlockChainStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetBlockChains(ctx context.Context, in *CommonIn, opts ...grpc.CallOption) (*BlockChains, error) {
	out := new(BlockChains)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetBlockChains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetSystemStatus(ctx context.Context, in *CommonIn, opts ...grpc.CallOption) (*SystemsStatusReply, error) {
	out := new(SystemsStatusReply)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetSystemStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetNetURL(ctx context.Context, in *CommonIn, opts ...grpc.CallOption) (*RawUrl, error) {
	out := new(RawUrl)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetNetURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) SelectUTXO(ctx context.Context, in *UtxoRequest, opts ...grpc.CallOption) (*UtxoResponse, error) {
	out := new(UtxoResponse)
	err := c.cc.Invoke(ctx, "/pb.Xchain/SelectUTXO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) PreExecWithSelectUTXO(ctx context.Context, in *PreExecWithSelectUTXORequest, opts ...grpc.CallOption) (*PreExecWithSelectUTXOResponse, error) {
	out := new(PreExecWithSelectUTXOResponse)
	err := c.cc.Invoke(ctx, "/pb.Xchain/PreExecWithSelectUTXO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetAccountByAK(ctx context.Context, in *AK2AccountRequest, opts ...grpc.CallOption) (*AK2AccountResponse, error) {
	out := new(AK2AccountResponse)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetAccountByAK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) GetAddressContracts(ctx context.Context, in *AddressContractsRequest, opts ...grpc.CallOption) (*AddressContractsResponse, error) {
	out := new(AddressContractsResponse)
	err := c.cc.Invoke(ctx, "/pb.Xchain/GetAddressContracts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) PreExec(ctx context.Context, in *InvokeRPCRequest, opts ...grpc.CallOption) (*InvokeRPCResponse, error) {
	out := new(InvokeRPCResponse)
	err := c.cc.Invoke(ctx, "/pb.Xchain/PreExec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XchainServer is the server API for Xchain service.
type XchainServer interface {
	// SelectUTXOBySize merge many utxos into a few of utxos
	SelectUTXOBySize(context.Context, *UtxoRequest) (*UtxoResponse, error)
	// PostTx post Transaction to a node
	PostTx(context.Context, *TxStatus) (*CommonReply, error)
	QueryACL(context.Context, *AclStatus) (*AclStatus, error)
	QueryUtxoRecord(context.Context, *UtxoRecordDetails) (*UtxoRecordDetails, error)
	QueryContractStatData(context.Context, *ContractStatDataRequest) (*ContractStatDataResponse, error)
	GetAccountContracts(context.Context, *GetAccountContractsRequest) (*GetAccountContractsResponse, error)
	// QueryTx query Transaction by TxStatus,
	// Bcname and Txid are required for this
	QueryTx(context.Context, *TxStatus) (*TxStatus, error)
	// GetBalance get balance of an address,
	// Address is required for this
	GetBalance(context.Context, *AddressStatus) (*AddressStatus, error)
	// GetFrozenBalance get two kinds of balance
	// 1. Still be frozen of an address
	// 2. Available now of an address
	// Address is required for this
	GetBalanceDetail(context.Context, *AddressBalanceStatus) (*AddressBalanceStatus, error)
	// GetFrozenBalance get balance that still be frozen of an address,
	// Address is required for this
	GetFrozenBalance(context.Context, *AddressStatus) (*AddressStatus, error)
	// GetBlock get block by blockid and return if the block in trunk or in branch
	GetBlock(context.Context, *BlockID) (*Block, error)
	// GetBlockByHeight get block by height and return if the block in trunk or in
	// branch
	GetBlockByHeight(context.Context, *BlockHeight) (*Block, error)
	GetBlockChainStatus(context.Context, *BCStatus) (*BCStatus, error)
	// Get blockchains query blockchains
	GetBlockChains(context.Context, *CommonIn) (*BlockChains, error)
	// GetSystemStatus query system status
	GetSystemStatus(context.Context, *CommonIn) (*SystemsStatusReply, error)
	// GetNetURL return net url
	GetNetURL(context.Context, *CommonIn) (*RawUrl, error)
	// 新的Select utxos接口, 不需要签名，可以支持选择账户的utxo
	SelectUTXO(context.Context, *UtxoRequest) (*UtxoResponse, error)
	// PreExecWithSelectUTXO preExec & selectUtxo
	PreExecWithSelectUTXO(context.Context, *PreExecWithSelectUTXORequest) (*PreExecWithSelectUTXOResponse, error)
	// GetAccountByAK get account sets contain a specific address
	GetAccountByAK(context.Context, *AK2AccountRequest) (*AK2AccountResponse, error)
	// GetAddressContracts get contracts of accounts contain a specific address
	GetAddressContracts(context.Context, *AddressContractsRequest) (*AddressContractsResponse, error)
	//预执行合约
	PreExec(context.Context, *InvokeRPCRequest) (*InvokeRPCResponse, error)
}

// UnimplementedXchainServer can be embedded to have forward compatible implementations.
type UnimplementedXchainServer struct {
}

func (*UnimplementedXchainServer) SelectUTXOBySize(ctx context.Context, req *UtxoRequest) (*UtxoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectUTXOBySize not implemented")
}
func (*UnimplementedXchainServer) PostTx(ctx context.Context, req *TxStatus) (*CommonReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTx not implemented")
}
func (*UnimplementedXchainServer) QueryACL(ctx context.Context, req *AclStatus) (*AclStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryACL not implemented")
}
func (*UnimplementedXchainServer) QueryUtxoRecord(ctx context.Context, req *UtxoRecordDetails) (*UtxoRecordDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryUtxoRecord not implemented")
}
func (*UnimplementedXchainServer) QueryContractStatData(ctx context.Context, req *ContractStatDataRequest) (*ContractStatDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryContractStatData not implemented")
}
func (*UnimplementedXchainServer) GetAccountContracts(ctx context.Context, req *GetAccountContractsRequest) (*GetAccountContractsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountContracts not implemented")
}
func (*UnimplementedXchainServer) QueryTx(ctx context.Context, req *TxStatus) (*TxStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTx not implemented")
}
func (*UnimplementedXchainServer) GetBalance(ctx context.Context, req *AddressStatus) (*AddressStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedXchainServer) GetBalanceDetail(ctx context.Context, req *AddressBalanceStatus) (*AddressBalanceStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalanceDetail not implemented")
}
func (*UnimplementedXchainServer) GetFrozenBalance(ctx context.Context, req *AddressStatus) (*AddressStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrozenBalance not implemented")
}
func (*UnimplementedXchainServer) GetBlock(ctx context.Context, req *BlockID) (*Block, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlock not implemented")
}
func (*UnimplementedXchainServer) GetBlockByHeight(ctx context.Context, req *BlockHeight) (*Block, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHeight not implemented")
}
func (*UnimplementedXchainServer) GetBlockChainStatus(ctx context.Context, req *BCStatus) (*BCStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockChainStatus not implemented")
}
func (*UnimplementedXchainServer) GetBlockChains(ctx context.Context, req *CommonIn) (*BlockChains, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockChains not implemented")
}
func (*UnimplementedXchainServer) GetSystemStatus(ctx context.Context, req *CommonIn) (*SystemsStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemStatus not implemented")
}
func (*UnimplementedXchainServer) GetNetURL(ctx context.Context, req *CommonIn) (*RawUrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNetURL not implemented")
}
func (*UnimplementedXchainServer) SelectUTXO(ctx context.Context, req *UtxoRequest) (*UtxoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectUTXO not implemented")
}
func (*UnimplementedXchainServer) PreExecWithSelectUTXO(ctx context.Context, req *PreExecWithSelectUTXORequest) (*PreExecWithSelectUTXOResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreExecWithSelectUTXO not implemented")
}
func (*UnimplementedXchainServer) GetAccountByAK(ctx context.Context, req *AK2AccountRequest) (*AK2AccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountByAK not implemented")
}
func (*UnimplementedXchainServer) GetAddressContracts(ctx context.Context, req *AddressContractsRequest) (*AddressContractsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddressContracts not implemented")
}
func (*UnimplementedXchainServer) PreExec(ctx context.Context, req *InvokeRPCRequest) (*InvokeRPCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreExec not implemented")
}

func RegisterXchainServer(s *grpc.Server, srv XchainServer) {
	s.RegisterService(&_Xchain_serviceDesc, srv)
}

func _Xchain_SelectUTXOBySize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UtxoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).SelectUTXOBySize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/SelectUTXOBySize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).SelectUTXOBySize(ctx, req.(*UtxoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_PostTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).PostTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/PostTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).PostTx(ctx, req.(*TxStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_QueryACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AclStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).QueryACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/QueryACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).QueryACL(ctx, req.(*AclStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_QueryUtxoRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UtxoRecordDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).QueryUtxoRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/QueryUtxoRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).QueryUtxoRecord(ctx, req.(*UtxoRecordDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_QueryContractStatData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContractStatDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).QueryContractStatData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/QueryContractStatData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).QueryContractStatData(ctx, req.(*ContractStatDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetAccountContracts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountContractsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetAccountContracts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetAccountContracts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetAccountContracts(ctx, req.(*GetAccountContractsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_QueryTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).QueryTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/QueryTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).QueryTx(ctx, req.(*TxStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetBalance(ctx, req.(*AddressStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetBalanceDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressBalanceStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetBalanceDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetBalanceDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetBalanceDetail(ctx, req.(*AddressBalanceStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetFrozenBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetFrozenBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetFrozenBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetFrozenBalance(ctx, req.(*AddressStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetBlock(ctx, req.(*BlockID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockHeight)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetBlockByHeight(ctx, req.(*BlockHeight))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetBlockChainStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BCStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetBlockChainStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetBlockChainStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetBlockChainStatus(ctx, req.(*BCStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetBlockChains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetBlockChains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetBlockChains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetBlockChains(ctx, req.(*CommonIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetSystemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetSystemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetSystemStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetSystemStatus(ctx, req.(*CommonIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetNetURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetNetURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetNetURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetNetURL(ctx, req.(*CommonIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_SelectUTXO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UtxoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).SelectUTXO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/SelectUTXO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).SelectUTXO(ctx, req.(*UtxoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_PreExecWithSelectUTXO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreExecWithSelectUTXORequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).PreExecWithSelectUTXO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/PreExecWithSelectUTXO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).PreExecWithSelectUTXO(ctx, req.(*PreExecWithSelectUTXORequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetAccountByAK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AK2AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetAccountByAK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetAccountByAK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetAccountByAK(ctx, req.(*AK2AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_GetAddressContracts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressContractsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).GetAddressContracts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/GetAddressContracts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).GetAddressContracts(ctx, req.(*AddressContractsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_PreExec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeRPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).PreExec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xchain/PreExec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).PreExec(ctx, req.(*InvokeRPCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Xchain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Xchain",
	HandlerType: (*XchainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SelectUTXOBySize",
			Handler:    _Xchain_SelectUTXOBySize_Handler,
		},
		{
			MethodName: "PostTx",
			Handler:    _Xchain_PostTx_Handler,
		},
		{
			MethodName: "QueryACL",
			Handler:    _Xchain_QueryACL_Handler,
		},
		{
			MethodName: "QueryUtxoRecord",
			Handler:    _Xchain_QueryUtxoRecord_Handler,
		},
		{
			MethodName: "QueryContractStatData",
			Handler:    _Xchain_QueryContractStatData_Handler,
		},
		{
			MethodName: "GetAccountContracts",
			Handler:    _Xchain_GetAccountContracts_Handler,
		},
		{
			MethodName: "QueryTx",
			Handler:    _Xchain_QueryTx_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _Xchain_GetBalance_Handler,
		},
		{
			MethodName: "GetBalanceDetail",
			Handler:    _Xchain_GetBalanceDetail_Handler,
		},
		{
			MethodName: "GetFrozenBalance",
			Handler:    _Xchain_GetFrozenBalance_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _Xchain_GetBlock_Handler,
		},
		{
			MethodName: "GetBlockByHeight",
			Handler:    _Xchain_GetBlockByHeight_Handler,
		},
		{
			MethodName: "GetBlockChainStatus",
			Handler:    _Xchain_GetBlockChainStatus_Handler,
		},
		{
			MethodName: "GetBlockChains",
			Handler:    _Xchain_GetBlockChains_Handler,
		},
		{
			MethodName: "GetSystemStatus",
			Handler:    _Xchain_GetSystemStatus_Handler,
		},
		{
			MethodName: "GetNetURL",
			Handler:    _Xchain_GetNetURL_Handler,
		},
		{
			MethodName: "SelectUTXO",
			Handler:    _Xchain_SelectUTXO_Handler,
		},
		{
			MethodName: "PreExecWithSelectUTXO",
			Handler:    _Xchain_PreExecWithSelectUTXO_Handler,
		},
		{
			MethodName: "GetAccountByAK",
			Handler:    _Xchain_GetAccountByAK_Handler,
		},
		{
			MethodName: "GetAddressContracts",
			Handler:    _Xchain_GetAddressContracts_Handler,
		},
		{
			MethodName: "PreExec",
			Handler:    _Xchain_PreExec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/ownluke/xuperos/common/pb/rpc.proto",
}
